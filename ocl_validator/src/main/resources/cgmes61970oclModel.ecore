<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="Model" nsURI="http://Model/1.0" nsPrefix="Model">
  <eAnnotations source="http://www.eclipse.org/OCL/Import">
    <details key="ecore" value="http://www.eclipse.org/emf/2002/Ecore"/>
  </eAnnotations>
  <eSubpackages name="CGMES" nsURI="http://Model/1.0/CGMES" nsPrefix="CGMES">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
      <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
      <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="DataSet">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
        <details key="constraints" value="TopologicalIslandInstance NumberOfSubstations ControlAreaInstance FileHeader IDuniqueness ParticipatingGeneratingUnit GenActivePowerInfeedDiffE DERActivePowerInfeedDiffE LoadActivePowerInfeedDiffE ENIActivePowerInfeedDiffE EIActivePowerInfeedDiffE"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="TopologicalIslandInstance" value="&#xA;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=5 ruleID=TopologicalIslandInstance&#xA;&#x9;&#x9;&#x9;if self.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;and self.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;then IEC61970::Base::Topology::TopologicalIsland.allInstances()->size() >= 1 else true endif"/>
        <details key="NumberOfSubstations" value="&#xA;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=NumberOfSubstations &#xA;&#x9;&#x9;&#x9;let allsubst = IEC61970::Base::Core::Substation.allInstances() in&#xA;&#x9;&#x9;&#x9;if self.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;and self.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;then allsubst->size() >= 1 and allsubst.VoltageLevels->size() > allsubst->size() else true endif"/>
        <details key="ControlAreaInstance" value="&#xA;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=ControlAreaInstance&#xA;&#x9;&#x9;&#x9;let allca = IEC61970::Base::ControlArea::ControlArea.allInstances() in&#xA;&#x9;&#x9;&#x9;let caich = allca->select(type = IEC61970::Base::ControlArea::ControlAreaTypeKind::Interchange) in&#xA;&#x9;&#x9;&#x9;let ca = caich->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;if (self.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;or self.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;and self.type = DataSetType::igm&#xA;&#x9;&#x9;&#x9;&#x9;and self.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;then caich->size() = 1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and ca.energyIdentCodeEic->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and ca.energyIdentCodeEic.substring(3,3) = 'Y'&#xA;&#x9;&#x9;&#x9;else true endif"/>
        <details key="FileHeader" value="&#xA;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=2 ruleID=FileHeader&#xA;&#x9;&#x9;&#x9;let models = FullModel.allInstances() in&#xA;&#x9;&#x9;&#x9;if (self.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;or self.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;and self.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;then models->size() = 6 else true endif"/>
        <details key="IDuniqueness" value="&#xA;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=IDuniqueness&#xA;&#x9;&#x9;&#x9;if self.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;and self.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;and not(self.global_level_validation)&#xA;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;then IEC61970::Base::Core::IdentifiedObject.allInstances()->isUnique(mRID) else true endif"/>
        <details key="ParticipatingGeneratingUnit" value="&#xA;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=5 ruleID=ParticipatingGeneratingUnitOnLine&#xA;&#x9;&#x9;&#x9;let gus = IEC61970::Base::Generation::Production::GeneratingUnit.allInstances() in&#xA;&#x9;&#x9;&#x9;if self.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and self.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and self.type = DataSetType::igm&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;then gus->exists(normalPF > 0)&#xA;&#x9;&#x9;&#x9;else true endif"/>
        <details key="GenActivePowerInfeedDiffE" value="&#xA;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=GenActivePowerInfeedDiffE&#xA;&#x9;&#x9;&#x9;let all = IEC61970::Base::Wires::SynchronousMachine.allInstances() in&#xA;&#x9;&#x9;&#x9;let sshp = all.p->sum() in&#xA;&#x9;&#x9;&#x9;let svp = all.Terminals.SvPowerFlow.p->sum() in&#xA;&#x9;&#x9;&#x9;let diff = sshp - svp in&#xA;&#x9;&#x9;&#x9;if self.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;and self.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;--and self.type = DataSetType::igm&#xA;&#x9;&#x9;&#x9;then diff.abs() &lt;= self.SSH_SV_TOT_P_DIFF else true endif"/>
        <details key="DERActivePowerInfeedDiffE" value="&#xA;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=DERActivePowerInfeedDiffE&#xA;&#x9;&#x9;&#x9;let all = IEC61970::Base::Wires::EnergySource.allInstances() in&#xA;&#x9;&#x9;&#x9;let sshp = all.activePower->sum() in&#xA;&#x9;&#x9;&#x9;let svp = all.Terminals.SvPowerFlow.p->sum() in&#xA;&#x9;&#x9;&#x9;let diff = sshp - svp in&#xA;&#x9;&#x9;&#x9;if self.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;and self.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;--and self.type = DataSetType::igm&#xA;&#x9;&#x9;&#x9;then diff.abs() &lt;= self.SSH_SV_TOT_P_DIFF else true endif"/>
        <details key="LoadActivePowerInfeedDiffE" value="&#xA;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=LoadActivePowerInfeedDiffE&#xA;&#x9;&#x9;&#x9;let all = IEC61970::Base::Wires::EnergyConsumer.allInstances() in&#xA;&#x9;&#x9;&#x9;let sshp = all.p->sum() in&#xA;&#x9;&#x9;&#x9;let svp = all.Terminals.SvPowerFlow.p->sum() in&#xA;&#x9;&#x9;&#x9;let diff = sshp - svp in&#xA;&#x9;&#x9;&#x9;if self.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;and self.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;--and self.type = DataSetType::igm&#xA;&#x9;&#x9;&#x9;&#x9;and all->notEmpty()&#xA;&#x9;&#x9;&#x9;then diff.abs() &lt;= self.SSH_SV_TOT_P_DIFF&#xA;&#x9;&#x9;&#x9;else true endif"/>
        <details key="ENIActivePowerInfeedDiffE" value="&#xA;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=ENIActivePowerInfeedDiffE&#xA;&#x9;&#x9;&#x9;let all = IEC61970::Base::Wires::ExternalNetworkInjection.allInstances() in&#xA;&#x9;&#x9;&#x9;let sshp = all.p->sum() in&#xA;&#x9;&#x9;&#x9;let svp = all.Terminals.SvPowerFlow.p->sum() in&#xA;&#x9;&#x9;&#x9;let diff = sshp - svp in&#xA;&#x9;&#x9;&#x9;if self.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;and self.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;--and self.type = DataSetType::igm&#xA;&#x9;&#x9;&#x9;&#x9;and all->notEmpty() &#xA;&#x9;&#x9;&#x9;then diff.abs() &lt;= self.SSH_SV_TOT_P_DIFF&#xA;&#x9;&#x9;&#x9;else true endif"/>
        <details key="EIActivePowerInfeedDiffE" value="&#xA;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=EIActivePowerInfeedDiffE&#xA;&#x9;&#x9;&#x9;let all = IEC61970::Base::Equivalents::EquivalentInjection.allInstances() in&#xA;&#x9;&#x9;&#x9;let sshp = all.p->sum() in&#xA;&#x9;&#x9;&#x9;let svp = all.Terminals.SvPowerFlow.p->sum() in&#xA;&#x9;&#x9;&#x9;let diff = sshp - svp in&#xA;&#x9;&#x9;&#x9;if self.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;and self.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;--and self.type = DataSetType::igm&#xA;&#x9;&#x9;&#x9;&#x9;and all->notEmpty() &#xA;&#x9;&#x9;&#x9;then diff.abs() &lt;= self.SSH_SV_TOT_P_DIFF&#xA;&#x9;&#x9;&#x9;else true endif"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" lowerBound="1"
          eType="#//CGMES/DataSetType"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="validationScope" lowerBound="1"
          eType="#//CGMES/ValidationScope"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="excludeProvedRules" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isEQoperation" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isEQshortCircuit" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="local_level_validation"
          lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="global_level_validation"
          lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="emf_level_validation"
          lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="NUMERIC_TOLERANCE" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat" defaultValueLiteral="0.0001"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="SSH_SV_MAX_P_DIFF" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt" defaultValueLiteral="10"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="SSH_SV_TOT_P_DIFF" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt" defaultValueLiteral="200"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="SSH_SV_MAX_Q_DIFF" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt" defaultValueLiteral="50"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="SSH_SV_MAX_TAP_STEP_DIFF"
          lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
          defaultValueLiteral="2"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="SSH_SV_MAX_Q_SHUNT_DIFF"
          lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
          defaultValueLiteral="1"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="SV_INJECTION_LIMIT" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat" defaultValueLiteral="0.1"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="EQ_BRANCH_X_LIMIT" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat" defaultValueLiteral="0.01"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="IO_NAME_LENGTH" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt" defaultValueLiteral="32"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="IO_DESCRIPTION_LENGTH"
          lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
          defaultValueLiteral="256"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="EIC_LENGTH" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt" defaultValueLiteral="16"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="SHORT_NAME_LENGTH" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt" defaultValueLiteral="12"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="ISO_CODE_LENGTH" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt" defaultValueLiteral="2"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="BOUNDARY_BV_MAX_DIFF"
          lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
          defaultValueLiteral="10"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="NEUTRALU_VOLTAGE_DIFF"
          lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"
          defaultValueLiteral="0.1"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="PATL_LIMIT_VALUE_DIFF"
          lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"
          defaultValueLiteral="0.1"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="INTERCH_IMBALANCE_WARNING"
          lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
          defaultValueLiteral="50"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="INTERCH_IMBALANCE_ERROR"
          lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
          defaultValueLiteral="200"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="INTERCH_IMBALANCE_EMF"
          lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
          defaultValueLiteral="2"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="modelingAuthorities"
          ordered="false" lowerBound="1" upperBound="-1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="regions" ordered="false"
          lowerBound="1" upperBound="-1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="synchronousAreas" ordered="false"
          lowerBound="1" upperBound="-1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="businessProcesses" ordered="false"
          lowerBound="1" upperBound="-1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="mas" ordered="false"
          lowerBound="1" upperBound="-1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="TsoCodeList" ordered="false"
          lowerBound="1" upperBound="-1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="DataSetMember" ordered="false"
          upperBound="-1" eType="#//CGMES/DataSetMember" containment="true" eOpposite="#//CGMES/DataSetMember/DataSet"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="DataSetMember">
      <eStructuralFeatures xsi:type="ecore:EReference" name="DataSet" lowerBound="1"
          eType="#//CGMES/DataSet" eOpposite="#//CGMES/DataSet/DataSetMember"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="DataSetType">
      <eLiterals name="igm" value="1"/>
      <eLiterals name="cgm" value="2"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="DifferenceModel" eSuperTypes="#//CGMES/ModelBase"/>
    <eClassifiers xsi:type="ecore:EClass" name="FullModel" eSuperTypes="#//CGMES/ModelBase">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
        <details key="constraints" value="TPBDEQBD EQEQBD TPEQEQDIFF SSHEQEQDIFF SVSSHTPTPBD EQDIFFEQ"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="TPBDEQBD" value="&#xA;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=4 ruleID=TPBD->EQBD&#xA;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;and self.modelPart = ModelPartType::TPBD&#xA;&#x9;&#x9;&#x9;then self.DependentOn->exists(modelPart = ModelPartType::EQBD)&#xA;&#x9;&#x9;&#x9;else true endif"/>
        <details key="EQEQBD" value="&#xA;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=4 ruleID=EQ->EQBD&#xA;&#x9;&#x9;&#x9;--2019-11-12 rule disabled&#xA;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;and self.modelPart = ModelPartType::EQ&#xA;&#x9;&#x9;&#x9;--then self.DependentOn->exists(modelPart = ModelPartType::EQBD)&#xA;&#x9;&#x9;&#x9;then true&#xA;&#x9;&#x9;&#x9;else true endif"/>
        <details key="TPEQEQDIFF" value="&#xA;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=4 ruleID=TP->EQ, TP->EQDIFF&#xA;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;and self.modelPart = ModelPartType::TP&#xA;&#x9;&#x9;&#x9;then self.DependentOn->exists(modelPart = ModelPartType::EQ) or self.DependentOn->exists(modelPart = ModelPartType::EQDIFF)&#xA;&#x9;&#x9;&#x9;else true endif"/>
        <details key="SSHEQEQDIFF" value="&#xA;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=4 ruleID=SSH->EQ, SSH->EQDIFF&#xA;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;and self.modelPart = ModelPartType::SSH&#xA;&#x9;&#x9;&#x9;then self.DependentOn->exists(modelPart = ModelPartType::EQ) or self.DependentOn->exists(modelPart = ModelPartType::EQDIFF)&#xA;&#x9;&#x9;&#x9;else true endif"/>
        <details key="SVSSHTPTPBD" value="&#xA;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=4 ruleID=SV->SSH, SV->TP, SV->TPBD&#xA;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;and self.modelPart = ModelPartType::SV&#xA;&#x9;&#x9;&#x9;then self.DependentOn->exists(modelPart = ModelPartType::SSH) or self.DependentOn->exists(modelPart = ModelPartType::TP) or self.DependentOn->exists(modelPart = ModelPartType::TPBD)&#xA;&#x9;&#x9;&#x9;else true endif"/>
        <details key="EQDIFFEQ" value="&#xA;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=4 ruleID=EQDIFF->EQ&#xA;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;and self.modelPart = ModelPartType::EQDIFF&#xA;&#x9;&#x9;&#x9;then self.Supersedes->exists(modelPart = ModelPartType::EQ)&#xA;&#x9;&#x9;&#x9;else true endif"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Model" eSuperTypes="#//CGMES/DataSetMember">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
        <details key="constraints" value="FileNameMD BusinessProcess ModelDescription"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="FileNameMD" value="&#xA;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=1 ruleID=FileNameMD&#xA;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;and (self.modelPart = ModelPartType::EQ or self.modelPart = ModelPartType::EQBD or self.modelPart = ModelPartType::TPBD )&#xA;&#x9;&#x9;&#x9;then self.effectiveDateTime &lt;> '' and self.fileVersion &lt;> ''&#xA;&#x9;&#x9;&#x9;&#x9;and ((self.sourcingRSC = '' and self.sourcingTSO &lt;> '')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(self.sourcingRSC &lt;> '' and self.synchronousArea &lt;> ''))&#xA;&#x9;&#x9;&#x9;else true endif&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;and (self.modelPart = ModelPartType::SSH or self.modelPart = ModelPartType::TP or self.modelPart = ModelPartType::SV)&#xA;&#x9;&#x9;&#x9;then self.effectiveDateTime &lt;> '' and self.fileVersion &lt;> '' and self.businessProcess &lt;> ''&#xA;&#x9;&#x9;&#x9;&#x9;and ((self.sourcingRSC = '' and self.sourcingTSO &lt;> '')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(self.sourcingRSC &lt;> '' and self.synchronousArea &lt;> ''))&#xA;&#x9;&#x9;&#x9;else true endif"/>
        <details key="BusinessProcess" value="&#xA;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=1 ruleID=BusinessProcess&#xA;&#x9;&#x9;&#x9;let bpl = self.businessProcess in&#xA;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;and (modelPart = ModelPartType::SSH or modelPart = ModelPartType::SV or modelPart = ModelPartType::TP)&#xA;&#x9;&#x9;&#x9;then bpl &lt;> '' and self.DataSet.businessProcesses->exists(businessProcesses | businessProcesses = bpl)&#xA;&#x9;&#x9;&#x9;else true endif"/>
        <details key="ModelDescription" value="&#xA;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=2 ruleID=ModelDescription&#xA;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;then self.description &lt;> ''&#xA;&#x9;&#x9;&#x9;else true endif"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="mRID" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="scenarioTime" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDate"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="description" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="bp" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="tool" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="rsc" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="created" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDate"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="version" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="modelingAuthoritySet"
          lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="region" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="boundary" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="profile" ordered="false"
          lowerBound="1" upperBound="-1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="effectiveDateTime" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="businessProcess" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="sourcingTSO" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="modelPart" lowerBound="1"
          eType="#//CGMES/ModelPartType"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="fileVersion" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="sourcingRSC" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="synchronousArea" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="SupersededBy" ordered="false"
          upperBound="-1" eType="#//CGMES/ModelBase" eOpposite="#//CGMES/ModelBase/Supersedes"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="Depending" ordered="false"
          upperBound="-1" eType="#//CGMES/ModelBase" eOpposite="#//CGMES/ModelBase/DependentOn"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ModelBase" eSuperTypes="#//CGMES/Model">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
        <details key="constraints" value="GeographicalRegion GeographicalRegionBD BaseVoltageNotInBoundary"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="GeographicalRegion" value="&#xA;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=5 ruleID=GeographicalRegion&#xA;&#x9;&#x9;&#x9;let sgrs = self.EqModelObject->selectByKind(IEC61970::Base::Core::SubGeographicalRegion) in&#xA;&#x9;&#x9;&#x9;let grs = sgrs.Region->asSet() in&#xA;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and self.modelPart = ModelPartType::EQ&#xA;&#x9;&#x9;&#x9;then grs->size() = 1&#xA;&#x9;&#x9;&#x9;else true endif"/>
        <details key="GeographicalRegionBD" value="&#xA;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=5 ruleID=GeographicalRegionBD&#xA;&#x9;&#x9;&#x9;let sgrs = self.EqModelObject->selectByKind(IEC61970::Base::Core::SubGeographicalRegion) in&#xA;&#x9;&#x9;&#x9;let grs = sgrs.Region->asSet() in&#xA;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and self.modelPart = ModelPartType::EQ&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and grs->size() = 1&#xA;&#x9;&#x9;&#x9;then  self.sourcingTSO = grs->asSequence()->at(1).name&#xA;&#x9;&#x9;&#x9;else true endif"/>
        <details key="BaseVoltageNotInBoundary" value="&#xA;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=5 ruleID=BaseVoltageNotInBoundary&#xA;&#x9;&#x9;&#x9;let bvs = self.EqModelObject->selectByKind(IEC61970::Base::Core::BaseVoltage) in&#xA;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and self.modelPart = ModelPartType::EQ&#xA;&#x9;&#x9;&#x9;then bvs->isEmpty()&#xA;&#x9;&#x9;&#x9;else true endif"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="Supersedes" ordered="false"
          upperBound="-1" eType="#//CGMES/Model" eOpposite="#//CGMES/Model/SupersededBy"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="SvModelObject" ordered="false"
          upperBound="-1" eType="#//CGMES/ModelObject" eOpposite="#//CGMES/ModelObject/SvModel"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="DependentOn" ordered="false"
          upperBound="-1" eType="#//CGMES/Model" eOpposite="#//CGMES/Model/Depending"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="TpModelObject" ordered="false"
          upperBound="-1" eType="#//CGMES/ModelObject" eOpposite="#//CGMES/ModelObject/TpModel"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="EqModelObject" ordered="false"
          upperBound="-1" eType="#//CGMES/ModelObject" eOpposite="#//CGMES/ModelObject/EqModel"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="SshModelObject" ordered="false"
          upperBound="-1" eType="#//CGMES/ModelObject" eOpposite="#//CGMES/ModelObject/SshModel"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ModelObject" eSuperTypes="#//CGMES/DataSetMember">
      <eStructuralFeatures xsi:type="ecore:EReference" name="SvModel" eType="#//CGMES/ModelBase"
          eOpposite="#//CGMES/ModelBase/SvModelObject"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="TpModel" eType="#//CGMES/ModelBase"
          eOpposite="#//CGMES/ModelBase/TpModelObject"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="EqModel" eType="#//CGMES/ModelBase"
          eOpposite="#//CGMES/ModelBase/EqModelObject"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="SshModel" eType="#//CGMES/ModelBase"
          eOpposite="#//CGMES/ModelBase/SshModelObject"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="ModelPartType">
      <eLiterals name="EQ" value="1"/>
      <eLiterals name="EQDIFF" value="2"/>
      <eLiterals name="EQBD" value="3"/>
      <eLiterals name="TP" value="4"/>
      <eLiterals name="TPBD" value="5"/>
      <eLiterals name="SV" value="6"/>
      <eLiterals name="SSH" value="7"/>
      <eLiterals name="DL" value="8"/>
      <eLiterals name="DY" value="9"/>
      <eLiterals name="GL" value="10"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="ModelType">
      <eLiterals name="EQOperation" value="1"/>
      <eLiterals name="EQCore" value="2"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="ValidationScope">
      <eLiterals name="QOCDCV2_1" value="1"/>
      <eLiterals name="QOCDCV3_1" value="2"/>
      <eLiterals name="TYNDP" value="3"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="mRID" eSuperTypes="#//CGMES/ModelObject">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="mRID" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eClassifiers>
    <eSubpackages name="IEC61970" nsURI="http://Model/1.0/CGMES/IEC61970" nsPrefix="IEC61970">
      <eSubpackages name="Base" nsURI="http://Model/1.0/CGMES/IEC61970/Base" nsPrefix="Base">
        <eSubpackages name="Domain" nsURI="http://Model/1.0/CGMES/IEC61970/Base/Domain"
            nsPrefix="Domain">
          <eClassifiers xsi:type="ecore:EClass" name="MonthDayInterval">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="end" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDate"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="start" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDate"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="Currency">
            <eLiterals name="USD" value="2"/>
            <eLiterals name="EUR" value="4"/>
            <eLiterals name="AUD" value="6"/>
            <eLiterals name="CAD" value="8"/>
            <eLiterals name="CHF" value="10"/>
            <eLiterals name="CNY" value="12"/>
            <eLiterals name="DKK" value="14"/>
            <eLiterals name="GBP" value="16"/>
            <eLiterals name="JPY" value="18"/>
            <eLiterals name="NOK" value="20"/>
            <eLiterals name="RUR" value="22"/>
            <eLiterals name="SEK" value="24"/>
            <eLiterals name="INR" value="26"/>
            <eLiterals name="other" value="28"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="OrientationKind">
            <eLiterals name="negative" value="2"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="UnitMultiplier">
            <eLiterals name="p" value="2"/>
            <eLiterals name="n" value="4"/>
            <eLiterals name="micro" value="6"/>
            <eLiterals name="m" value="8"/>
            <eLiterals name="c" value="10"/>
            <eLiterals name="d" value="12"/>
            <eLiterals name="k" value="14"/>
            <eLiterals name="M" value="16"/>
            <eLiterals name="G" value="18"/>
            <eLiterals name="T" value="20"/>
            <eLiterals name="none" value="22"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="UnitSymbol">
            <eLiterals name="VA" value="2"/>
            <eLiterals name="W" value="4"/>
            <eLiterals name="VAr" value="6"/>
            <eLiterals name="VAh" value="8"/>
            <eLiterals name="Wh" value="10"/>
            <eLiterals name="VArh" value="12"/>
            <eLiterals name="V" value="14"/>
            <eLiterals name="ohm" value="16"/>
            <eLiterals name="A" value="18"/>
            <eLiterals name="F" value="20"/>
            <eLiterals name="H" value="22"/>
            <eLiterals name="degC" value="24"/>
            <eLiterals name="s" value="26"/>
            <eLiterals name="min" value="28"/>
            <eLiterals name="h" value="30"/>
            <eLiterals name="deg" value="32"/>
            <eLiterals name="rad" value="34"/>
            <eLiterals name="J" value="36"/>
            <eLiterals name="N" value="38"/>
            <eLiterals name="S" value="40"/>
            <eLiterals name="none" value="42"/>
            <eLiterals name="Hz" value="44"/>
            <eLiterals name="g" value="46"/>
            <eLiterals name="Pa" value="48"/>
            <eLiterals name="m" value="50"/>
            <eLiterals name="m2" value="52"/>
            <eLiterals name="m3" value="54"/>
          </eClassifiers>
        </eSubpackages>
        <eSubpackages name="DC" nsURI="http://Model/1.0/CGMES/IEC61970/Base/DC" nsPrefix="DC">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
            <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
            <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
            <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
          </eAnnotations>
          <eClassifiers xsi:type="ecore:EClass" name="ACDCConverter" eSuperTypes="#//CGMES/IEC61970/Base/Core/ConductingEquipment">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="ACDCConvContainment TerminalSeqNumOrderACDCConverter ConverterLosses"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="ACDCConvContainment" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=ACDCConvContainment&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.EquipmentContainer.oclIsKindOf(DCConverterUnit) else true endif"/>
              <details key="TerminalSeqNumOrderACDCConverter" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=TerminalSeqNumOrder&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.Terminals->union(self.DCTerminals)->exists(t : Core::ACDCTerminal | t.sequenceNumber = 1) else true endif"/>
              <details key="ConverterLosses" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=ConverterLosses&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.idleLoss > 0 and self.resistiveLoss > 0 and self.switchingLoss > 0 else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="baseS" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="idleLoss" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxUdc" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="minUdc" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="numberOfValves"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="ratedUdc" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="resistiveLoss"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="switchingLoss"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="valveU0" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="DCTerminals" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/DC/ACDCConverterDCTerminal"
                eOpposite="#//CGMES/IEC61970/Base/DC/ACDCConverterDCTerminal/DCConductingEquipment"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="PccTerminal" eType="#//CGMES/IEC61970/Base/Core/Terminal"
                eOpposite="#//CGMES/IEC61970/Base/Core/Terminal/ConverterDCSides"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="idc" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="poleLossP" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="uc" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="udc" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="p" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="q" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="targetPpcc" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="targetUdc" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="ACDCConverterDCTerminal" eSuperTypes="#//CGMES/IEC61970/Base/DC/DCBaseTerminal">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="polarity" eType="#//CGMES/IEC61970/Base/DC/DCPolarityKind"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="DCConductingEquipment"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/DC/ACDCConverter" eOpposite="#//CGMES/IEC61970/Base/DC/ACDCConverter/DCTerminals"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="CsConverter" eSuperTypes="#//CGMES/IEC61970/Base/DC/ACDCConverter">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxAlpha" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxGamma" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxIdc" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="minAlpha" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="minGamma" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="minIdc" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="ratedIdc" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="alpha" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="gamma" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="operatingMode"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/DC/CsOperatingModeKind"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="pPccControl" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/DC/CsPpccControlKind"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="targetAlpha" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="targetGamma" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="targetIdc" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="DCBaseTerminal" eSuperTypes="#//CGMES/IEC61970/Base/Core/ACDCTerminal">
            <eStructuralFeatures xsi:type="ecore:EReference" name="DCNode" eType="#//CGMES/IEC61970/Base/DC/DCNode"
                eOpposite="#//CGMES/IEC61970/Base/DC/DCNode/DCTerminals"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="DCTopologicalNode"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Topology/DCTopologicalNode"
                eOpposite="#//CGMES/IEC61970/Base/Topology/DCTopologicalNode/DCTerminals"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="DCBreaker" eSuperTypes="#//CGMES/IEC61970/Base/DC/DCSwitch"/>
          <eClassifiers xsi:type="ecore:EClass" name="DCBusbar" eSuperTypes="#//CGMES/IEC61970/Base/DC/DCConductingEquipment"/>
          <eClassifiers xsi:type="ecore:EClass" name="DCChopper" eSuperTypes="#//CGMES/IEC61970/Base/DC/DCConductingEquipment"/>
          <eClassifiers xsi:type="ecore:EClass" name="DCConductingEquipment" eSuperTypes="#//CGMES/IEC61970/Base/Core/Equipment">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="TerminalCount1DC TerminalCount2DC DCEQContainment DCLineContainment"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="TerminalCount1DC" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=TerminalCount1DC&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.oclIsKindOf(DCGround) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.oclIsKindOf(DCShunt) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.oclIsKindOf(DCBusbar))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.DCTerminals->size() = 1 else true endif"/>
              <details key="TerminalCount2DC" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=TerminalCount2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if  self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.oclIsKindOf(DCSwitch) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.oclIsKindOf(DCChopper) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.oclIsKindOf(DCSeriesDevice) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.oclIsKindOf(DCLineSegment))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.DCTerminals->size() = 2 else true endif"/>
              <details key="DCEQContainment" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=DCEQContainment&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.oclIsKindOf(DCChopper)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(DCSwitch)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(DCGround)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(DCBusbar)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(DCShunt)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(DCSeriesDevice))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.EquipmentContainer.oclIsKindOf(DCConverterUnit) else true endif"/>
              <details key="DCLineContainment" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=DCLineContainment&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.oclIsKindOf(DCLineSegment)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.EquipmentContainer.oclIsKindOf(DCLine) else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EReference" name="DCTerminals" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/DC/DCTerminal" eOpposite="#//CGMES/IEC61970/Base/DC/DCTerminal/DCConductingEquipment"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="DCConverterOperatingModeKind">
            <eLiterals name="bipolar" value="2"/>
            <eLiterals name="monopolarMetallicReturn" value="4"/>
            <eLiterals name="monopolarGroundReturn" value="6"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="DCConverterUnit" eSuperTypes="#//CGMES/IEC61970/Base/DC/DCEquipmentContainer">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="DCEquipmentContainerMappingDCC"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="DCEquipmentContainerMappingDCC" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=DCEquipmentContainerMapping&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.energyIdentCodeEic &lt;> null and self.energyIdentCodeEic.substring(3,3) = 'T' else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="operationMode"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/DC/DCConverterOperatingModeKind"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Substation" eType="#//CGMES/IEC61970/Base/Core/Substation"
                eOpposite="#//CGMES/IEC61970/Base/Core/Substation/DCConverterUnit"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="DCDisconnector" eSuperTypes="#//CGMES/IEC61970/Base/DC/DCSwitch"/>
          <eClassifiers xsi:type="ecore:EClass" name="DCEquipmentContainer" eSuperTypes="#//CGMES/IEC61970/Base/Core/EquipmentContainer">
            <eStructuralFeatures xsi:type="ecore:EReference" name="DCNodes" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/DC/DCNode" eOpposite="#//CGMES/IEC61970/Base/DC/DCNode/DCEquipmentContainer"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="DCTopologicalNode"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Topology/DCTopologicalNode"
                eOpposite="#//CGMES/IEC61970/Base/Topology/DCTopologicalNode/DCEquipmentContainer"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="DCGround" eSuperTypes="#//CGMES/IEC61970/Base/DC/DCConductingEquipment">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="inductance" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="r" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="DCLine" eSuperTypes="#//CGMES/IEC61970/Base/DC/DCEquipmentContainer">
            <eStructuralFeatures xsi:type="ecore:EReference" name="Region" eType="#//CGMES/IEC61970/Base/Core/SubGeographicalRegion"
                eOpposite="#//CGMES/IEC61970/Base/Core/SubGeographicalRegion/DCLines"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="DCLineSegment" eSuperTypes="#//CGMES/IEC61970/Base/DC/DCConductingEquipment">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="DCLineSegmentR DCEquipmentContainerMappingDCL"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="DCLineSegmentR" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=DCLineSegmentR&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.resistance >= 0 else true endif"/>
              <details key="DCEquipmentContainerMappingDCL" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=DCEquipmentContainerMapping&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.energyIdentCodeEic &lt;> null and self.energyIdentCodeEic.substring(3,3) = 'T' else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="capacitance" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="inductance" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="resistance" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="length" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="PerLengthParameter"
                eType="#//CGMES/IEC61970/Base/DC/PerLengthDCLineParameter" eOpposite="#//CGMES/IEC61970/Base/DC/PerLengthDCLineParameter/DCLineSegments"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="DCNode" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="DCNodeContainment"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="DCNodeContainment" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=DCNodeContainment&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.DCEquipmentContainer.oclIsKindOf(DCEquipmentContainer) else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EReference" name="DCTerminals" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/DC/DCBaseTerminal" eOpposite="#//CGMES/IEC61970/Base/DC/DCBaseTerminal/DCNode"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="DCEquipmentContainer"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/DC/DCEquipmentContainer"
                eOpposite="#//CGMES/IEC61970/Base/DC/DCEquipmentContainer/DCNodes"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="DCTopologicalNode"
                eType="#//CGMES/IEC61970/Base/Topology/DCTopologicalNode" eOpposite="#//CGMES/IEC61970/Base/Topology/DCTopologicalNode/DCNodes"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="DCPolarityKind">
            <eLiterals name="positive" value="2"/>
            <eLiterals name="middle" value="4"/>
            <eLiterals name="negative" value="6"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="DCSeriesDevice" eSuperTypes="#//CGMES/IEC61970/Base/DC/DCConductingEquipment">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="inductance" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="resistance" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="ratedUdc" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="DCShunt" eSuperTypes="#//CGMES/IEC61970/Base/DC/DCConductingEquipment">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="capacitance" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="resistance" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="ratedUdc" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="DCSwitch" eSuperTypes="#//CGMES/IEC61970/Base/DC/DCConductingEquipment"/>
          <eClassifiers xsi:type="ecore:EClass" name="DCTerminal" eSuperTypes="#//CGMES/IEC61970/Base/DC/DCBaseTerminal">
            <eStructuralFeatures xsi:type="ecore:EReference" name="DCConductingEquipment"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/DC/DCConductingEquipment"
                eOpposite="#//CGMES/IEC61970/Base/DC/DCConductingEquipment/DCTerminals"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="PerLengthDCLineParameter" eSuperTypes="#//CGMES/IEC61970/Base/Wires/PerLengthLineParameter">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="DCLineSegmentRPerLength"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="DCLineSegmentRPerLength" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=DCLineSegmentR&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.resistance >= 0 else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="capacitance" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="inductance" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="resistance" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="DCLineSegments"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/DC/DCLineSegment"
                eOpposite="#//CGMES/IEC61970/Base/DC/DCLineSegment/PerLengthParameter"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="VsCapabilityCurve" eSuperTypes="#//CGMES/IEC61970/Base/Core/Curve">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="VSCYValues VSCXValues"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="VSCYValues" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=VSCYValues&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.CurveDatas->forAll(y2value > y1value) else true endif"/>
              <details key="VSCXValues" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=VSCXValues&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.CurveDatas->size() >= 3  else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EReference" name="VsConverterDCSides"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/DC/VsConverter"
                eOpposite="#//CGMES/IEC61970/Base/DC/VsConverter/CapabilityCurve"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="VsConverter" eSuperTypes="#//CGMES/IEC61970/Base/DC/ACDCConverter">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxModulationIndex"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxValveCurrent"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="CapabilityCurve"
                eType="#//CGMES/IEC61970/Base/DC/VsCapabilityCurve" eOpposite="#//CGMES/IEC61970/Base/DC/VsCapabilityCurve/VsConverterDCSides"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="delta" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="uf" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="droop" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="droopCompensation"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="pPccControl" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/DC/VsPpccControlKind"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="qPccControl" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/DC/VsQpccControlKind"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="qShare" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="targetQpcc" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="targetUpcc" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="DCTopologicalIsland" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EReference" name="DCTopologicalNodes"
                ordered="false" lowerBound="1" upperBound="-1" eType="#//CGMES/IEC61970/Base/Topology/DCTopologicalNode"
                eOpposite="#//CGMES/IEC61970/Base/Topology/DCTopologicalNode/DCTopologicalIsland"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="CsOperatingModeKind">
            <eLiterals name="inverter" value="2"/>
            <eLiterals name="rectifier" value="4"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="CsPpccControlKind">
            <eLiterals name="activePower" value="2"/>
            <eLiterals name="dcVoltage" value="4"/>
            <eLiterals name="dcCurrent" value="6"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="VsPpccControlKind">
            <eLiterals name="pPcc" value="2"/>
            <eLiterals name="udc" value="4"/>
            <eLiterals name="pPccAndUdcDroop" value="6"/>
            <eLiterals name="pPccAndUdcDroopWithCompensation" value="8"/>
            <eLiterals name="pPccAndUdcDroopPilot" value="10"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="VsQpccControlKind">
            <eLiterals name="reactivePcc" value="2"/>
            <eLiterals name="voltagePcc" value="4"/>
            <eLiterals name="powerFactorPcc" value="6"/>
          </eClassifiers>
        </eSubpackages>
        <eSubpackages name="Generation" nsURI="http://Model/1.0/CGMES/IEC61970/Base/Generation"
            nsPrefix="Generation">
          <eSubpackages name="Production" nsURI="http://Model/1.0/CGMES/IEC61970/Base/Generation/Production"
              nsPrefix="Production">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
              <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
              <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
            </eAnnotations>
            <eClassifiers xsi:type="ecore:EClass" name="FossilFuel" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="fossilFuelType"
                  lowerBound="1" eType="#//CGMES/IEC61970/Base/Generation/Production/FuelType"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="ThermalGeneratingUnit"
                  lowerBound="1" eType="#//CGMES/IEC61970/Base/Generation/Production/ThermalGeneratingUnit"
                  eOpposite="#//CGMES/IEC61970/Base/Generation/Production/ThermalGeneratingUnit/FossilFuels"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EEnum" name="FuelType">
              <eLiterals name="coal" value="2"/>
              <eLiterals name="oil" value="4"/>
              <eLiterals name="gas" value="6"/>
              <eLiterals name="lignite" value="8"/>
              <eLiterals name="hardCoal" value="10"/>
              <eLiterals name="oilShale" value="12"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="GeneratingUnit" eSuperTypes="#//CGMES/IEC61970/Base/Core/Equipment">
              <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
                <details key="constraints" value="GeneratingUnitLimits GeneratingUnitMaxP SMQLimits3 GeneratingUnitNominalP GenActivePowerInfeedLim"/>
              </eAnnotations>
              <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
                <details key="GeneratingUnitLimits" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=GeneratingUnitLimits&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.maxOperatingP >= self.minOperatingP else true endif"/>
                <details key="GeneratingUnitMaxP" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=GeneratingUnitMaxP&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.maxOperatingP >= 0 else true endif"/>
                <details key="SMQLimits3" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=SMQLimits3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let sm = self.RotatingMachine->asSequence()->at(1).oclAsType(Wires::SynchronousMachine) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let sslim = sm.ratedS in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let ppmax = self.maxOperatingP.abs() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let ppmin = self.minOperatingP.abs() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let qqmax = sm.maxQ.abs() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let qqmin = sm.minQ.abs() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and sm.ratedS->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and sm.ratedS &lt;> 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.RotatingMachine->size() = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then ppmax &lt;= sslim and ppmin &lt;= sslim and qqmax &lt;= sslim and qqmin &lt;= sslim &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
                <details key="GeneratingUnitNominalP" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=GeneratingUnitNominalP&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let rm = self.RotatingMachine->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.RotatingMachine->size() = 1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and rm.ratedS->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and rm.ratedS &lt;> 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.nominalP >= 0 and self.nominalP &lt;= rm.ratedS &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
                <details key="GenActivePowerInfeedLim" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=GenActivePowerInfeedLim&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let sm = self.RotatingMachine->asSequence()->at(1).oclAsType(Wires::SynchronousMachine) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.RotatingMachine->size() = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and sm.p->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and sm.p &lt;> 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then -sm.p &lt;= self.maxOperatingP and -sm.p >= self.minOperatingP&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              </eAnnotations>
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="genControlSource"
                  eType="#//CGMES/IEC61970/Base/Generation/Production/GeneratorControlSource"/>
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="governorSCD"
                  lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="initialP" lowerBound="1"
                  eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="longPF" lowerBound="1"
                  eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="maximumAllowableSpinningReserve"
                  lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxOperatingP"
                  lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="minOperatingP"
                  lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="nominalP" lowerBound="1"
                  eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="ratedGrossMaxP"
                  lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="ratedGrossMinP"
                  lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="ratedNetMaxP"
                  lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="shortPF" lowerBound="1"
                  eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="startupCost"
                  lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="variableCost"
                  lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="totalEfficiency"
                  lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="ControlAreaGeneratingUnit"
                  ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/ControlArea/ControlAreaGeneratingUnit"
                  eOpposite="#//CGMES/IEC61970/Base/ControlArea/ControlAreaGeneratingUnit/GeneratingUnit"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="GrossToNetActivePowerCurves"
                  ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Generation/Production/GrossToNetActivePowerCurve"
                  eOpposite="#//CGMES/IEC61970/Base/Generation/Production/GrossToNetActivePowerCurve/GeneratingUnit"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="RotatingMachine"
                  ordered="false" lowerBound="1" upperBound="-1" eType="#//CGMES/IEC61970/Base/Wires/RotatingMachine"
                  eOpposite="#//CGMES/IEC61970/Base/Wires/RotatingMachine/GeneratingUnit"/>
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="normalPF" lowerBound="1"
                  eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EEnum" name="GeneratorControlSource">
              <eLiterals name="unavailable" value="2"/>
              <eLiterals name="offAGC" value="4"/>
              <eLiterals name="onAGC" value="6"/>
              <eLiterals name="plantControl" value="8"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="GrossToNetActivePowerCurve"
                eSuperTypes="#//CGMES/IEC61970/Base/Core/Curve">
              <eStructuralFeatures xsi:type="ecore:EReference" name="GeneratingUnit"
                  lowerBound="1" eType="#//CGMES/IEC61970/Base/Generation/Production/GeneratingUnit"
                  eOpposite="#//CGMES/IEC61970/Base/Generation/Production/GeneratingUnit/GrossToNetActivePowerCurves"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EEnum" name="HydroEnergyConversionKind">
              <eLiterals name="generator" value="2"/>
              <eLiterals name="pumpAndGenerator" value="4"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="HydroGeneratingUnit" eSuperTypes="#//CGMES/IEC61970/Base/Generation/Production/GeneratingUnit">
              <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
                <details key="constraints" value="SMQLimits4"/>
              </eAnnotations>
              <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
                <details key="SMQLimits4" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=SMQLimits4&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let sm = self.RotatingMachine->asSequence()->at(1).oclAsType(Wires::SynchronousMachine) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.RotatingMachine->size() = 1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.energyConversionCapability = HydroEnergyConversionKind::generator&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (sm.type = Wires::SynchronousMachineKind::generator &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or sm.type = Wires::SynchronousMachineKind::generatorOrCondenser)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.minOperatingP >= 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              </eAnnotations>
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="energyConversionCapability"
                  eType="#//CGMES/IEC61970/Base/Generation/Production/HydroEnergyConversionKind"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="HydroPowerPlant"
                  eType="#//CGMES/IEC61970/Base/Generation/Production/HydroPowerPlant"
                  eOpposite="#//CGMES/IEC61970/Base/Generation/Production/HydroPowerPlant/HydroGeneratingUnits"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EEnum" name="HydroPlantStorageKind">
              <eLiterals name="runOfRiver" value="2"/>
              <eLiterals name="pumpedStorage" value="4"/>
              <eLiterals name="storage" value="6"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="HydroPowerPlant" eSuperTypes="#//CGMES/IEC61970/Base/Core/PowerSystemResource">
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="hydroPlantStorageType"
                  lowerBound="1" eType="#//CGMES/IEC61970/Base/Generation/Production/HydroPlantStorageKind"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="HydroPumps" ordered="false"
                  upperBound="-1" eType="#//CGMES/IEC61970/Base/Generation/Production/HydroPump"
                  eOpposite="#//CGMES/IEC61970/Base/Generation/Production/HydroPump/HydroPowerPlant"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="HydroGeneratingUnits"
                  ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Generation/Production/HydroGeneratingUnit"
                  eOpposite="#//CGMES/IEC61970/Base/Generation/Production/HydroGeneratingUnit/HydroPowerPlant"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="HydroPump" eSuperTypes="#//CGMES/IEC61970/Base/Core/Equipment">
              <eStructuralFeatures xsi:type="ecore:EReference" name="HydroPowerPlant"
                  eType="#//CGMES/IEC61970/Base/Generation/Production/HydroPowerPlant"
                  eOpposite="#//CGMES/IEC61970/Base/Generation/Production/HydroPowerPlant/HydroPumps"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="RotatingMachine"
                  lowerBound="1" eType="#//CGMES/IEC61970/Base/Wires/RotatingMachine"
                  eOpposite="#//CGMES/IEC61970/Base/Wires/RotatingMachine/HydroPump"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="NuclearGeneratingUnit" eSuperTypes="#//CGMES/IEC61970/Base/Generation/Production/GeneratingUnit"/>
            <eClassifiers xsi:type="ecore:EClass" name="SolarGeneratingUnit" eSuperTypes="#//CGMES/IEC61970/Base/Generation/Production/GeneratingUnit"/>
            <eClassifiers xsi:type="ecore:EClass" name="ThermalGeneratingUnit" eSuperTypes="#//CGMES/IEC61970/Base/Generation/Production/GeneratingUnit">
              <eStructuralFeatures xsi:type="ecore:EReference" name="FossilFuels"
                  ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Generation/Production/FossilFuel"
                  eOpposite="#//CGMES/IEC61970/Base/Generation/Production/FossilFuel/ThermalGeneratingUnit"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EEnum" name="WindGenUnitKind">
              <eLiterals name="offshore" value="2"/>
              <eLiterals name="onshore" value="4"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="WindGeneratingUnit" eSuperTypes="#//CGMES/IEC61970/Base/Generation/Production/GeneratingUnit">
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="windGenUnitType"
                  lowerBound="1" eType="#//CGMES/IEC61970/Base/Generation/Production/WindGenUnitKind"/>
            </eClassifiers>
          </eSubpackages>
        </eSubpackages>
        <eSubpackages name="SCADA" nsURI="http://Model/1.0/CGMES/IEC61970/Base/SCADA"
            nsPrefix="SCADA">
          <eClassifiers xsi:type="ecore:EEnum" name="Source">
            <eLiterals name="PROCESS" value="2"/>
            <eLiterals name="DEFAULTED" value="4"/>
            <eLiterals name="SUBSTITUTED" value="6"/>
          </eClassifiers>
        </eSubpackages>
        <eSubpackages name="Topology" nsURI="http://Model/1.0/CGMES/IEC61970/Base/Topology"
            nsPrefix="Topology">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
            <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
            <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
            <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
          </eAnnotations>
          <eClassifiers xsi:type="ecore:EClass" name="BusNameMarker" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="priority" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Terminal" ordered="false"
                lowerBound="1" upperBound="-1" eType="#//CGMES/IEC61970/Base/Core/ACDCTerminal"
                eOpposite="#//CGMES/IEC61970/Base/Core/ACDCTerminal/BusNameMarker"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="ReportingGroup"
                eType="#//CGMES/IEC61970/Base/Core/ReportingGroup" eOpposite="#//CGMES/IEC61970/Base/Core/ReportingGroup/BusNameMarker"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="DCTopologicalNode" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EReference" name="DCTerminals" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/DC/DCBaseTerminal" eOpposite="#//CGMES/IEC61970/Base/DC/DCBaseTerminal/DCTopologicalNode"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="DCNodes" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/DC/DCNode" eOpposite="#//CGMES/IEC61970/Base/DC/DCNode/DCTopologicalNode"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="DCEquipmentContainer"
                eType="#//CGMES/IEC61970/Base/DC/DCEquipmentContainer" eOpposite="#//CGMES/IEC61970/Base/DC/DCEquipmentContainer/DCTopologicalNode"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="DCTopologicalIsland"
                eType="#//CGMES/IEC61970/Base/DC/DCTopologicalIsland" eOpposite="#//CGMES/IEC61970/Base/DC/DCTopologicalIsland/DCTopologicalNodes"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="TopologicalNode" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="TNFromEndIsoCode TNFromEndNameLength TNFromEndNameTsoLength TNToEndIsoCode TNToEndNameLength TNToEndNameTsoLength SvPowerFlowBranchInstances VoltageTargetsAtTN VoltageTargetAndDeadbandAtTN EnergizedBoundaryTN ACTielineBV UnpairedTieFlow RequiredSvVoltage InconsistentCurrentLimits Xt_InconsistentTnBaseVoltage"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="TNFromEndIsoCode" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=TNFromEndIsoCode&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let code = self.fromEndIsoCode in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.boundaryPoint = true&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then code &lt;> '' and self.DataSet.TsoCodeList->exists(TsoCodeList | TsoCodeList = code)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="TNFromEndNameLength" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=TNFromEndNameLength&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.fromEndName &lt;> null and self.fromEndName &lt;> ''&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then self.fromEndName.size() &lt;= self.DataSet.IO_NAME_LENGTH&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="TNFromEndNameTsoLength" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=TNFromEndNameTsoLength&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.fromEndNameTso &lt;> null and self.fromEndNameTso &lt;> ''&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then self.fromEndNameTso.size() &lt;= self.DataSet.IO_NAME_LENGTH&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="TNToEndIsoCode" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=TNToEndIsoCode&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let code = self.toEndIsoCode in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.boundaryPoint = true&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then code &lt;> '' and self.DataSet.TsoCodeList->exists(TsoCodeList | TsoCodeList = code)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="TNToEndNameLength" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=TNToEndNameLength&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.toEndName &lt;> null and self.toEndName &lt;> ''&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then self.toEndName.size() &lt;= self.DataSet.IO_NAME_LENGTH&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="TNToEndNameTsoLength" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=TNToEndNameTsoLength&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.toEndNameTso &lt;> null and self.toEndNameTso &lt;> ''&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then self.toEndNameTso.size() &lt;= self.DataSet.IO_NAME_LENGTH&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="SvPowerFlowBranchInstances" value="&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=5 ruleID=SvPowerFlowBranchInstances&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;--2019-11-15 Cast error on Switch corrected&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let trmnl = self.Terminal in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let ce = trmnl.ConductingEquipment in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let ei = ce->select(oclIsKindOf(Equivalents::EquivalentInjection)) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let acls = ce->select(oclIsKindOf(Wires::ACLineSegment)) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let ptr = ce->select(oclIsKindOf(Wires::PowerTransformer)) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let sw = ce->select(oclIsKindOf(Wires::Switch)) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let swi = sw->asSequence()->at(1).oclAsType(Wires::Switch) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if &#x9;self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.type = DataSetType::igm&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.boundaryPoint = true&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnl->notEmpty()&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ce->notEmpty()&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then &#x9;&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ei->notEmpty()&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (acls->notEmpty()&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or ptr->notEmpty()&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or (sw->notEmpty() and swi.retained = true))&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="VoltageTargetsAtTN" value="&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=VoltageTargetsAtTN&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let trmnl = self.Terminal->select(RegulatingControl->notEmpty()) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let rcc = trmnl.RegulatingControl->select(enabled and not(discrete)) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let first_rcc = rcc->asSequence()->at(1) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and rcc->notEmpty() &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and rcc->size() >= 2 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then rcc->forAll(first_rcc.targetValue = targetValue)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="VoltageTargetAndDeadbandAtTN" value="&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=VoltageTargetAndDeadbandAtTN&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let trmnl = self.Terminal->select(RegulatingControl->notEmpty()) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let drcc = trmnl.RegulatingControl->select(discrete and enabled) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let arcc = trmnl.RegulatingControl->select(not(discrete) and enabled) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let max_db = drcc.targetDeadband->max() in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let max_drcc = drcc->select(targetDeadband = max_db)->asSequence()->at(1) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and drcc->size() >= 2 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and drcc->forAll(targetDeadband->notEmpty())&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then drcc->forAll((max_drcc.targetValue + max_drcc.targetDeadband/2 >= targetValue + targetDeadband/2&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and max_drcc.targetValue - max_drcc.targetDeadband/2 &lt; targetValue + targetDeadband/2)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(max_drcc.targetValue + max_drcc.targetDeadband/2 > targetValue - targetDeadband/2&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and max_drcc.targetValue - max_drcc.targetDeadband/2 &lt;= targetValue - targetDeadband/2)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;arcc->forAll((max_drcc.targetValue + max_drcc.targetDeadband/2 >= targetValue)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and max_drcc.targetValue - max_drcc.targetDeadband/2 &lt;= targetValue)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and drcc->size() = 1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and drcc->forAll(targetDeadband->notEmpty())&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and arcc->size() > 0&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then arcc->forAll(max_drcc.targetValue + max_drcc.targetDeadband/2 >= targetValue&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and max_drcc.targetValue - max_drcc.targetDeadband/2 &lt;= targetValue)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="EnergizedBoundaryTN" value="&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=EnergizedBoundaryTN&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;--2019-11-12 Logic corrected&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let svv = self.SvVoltage in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let trmnls = self.Terminal in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let eib = trmnls.ConductingEquipment->select(oclIsKindOf(Equivalents::EquivalentInjection)) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let ei = eib.oclAsType(Equivalents::EquivalentInjection) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnls->notEmpty()&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and eib->notEmpty()&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.boundaryPoint&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ei->exists(p &lt;> 0 or q &lt;> 0)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then  svv->notEmpty() and svv.v > 0&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="ACTielineBV" value="&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=7 ruleID=ACTielineBV&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let trmnl = self.Terminal in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let aclines = trmnl.ConductingEquipment->selectByType(Wires::ACLineSegment)->asSequence() in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let acline1 = aclines->at(1) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let acline2 = aclines->at(2) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let bv1 = acline1.BaseVoltage in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let bv2 = acline2.BaseVoltage in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let bvdiff = bv1.nominalVoltage - bv2.nominalVoltage in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.type = DataSetType::cgm&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.boundaryPoint &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.description = null or self.description.size() &lt; 4 or self.description.substring(1,4) &lt;> 'HVDC')&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnl->notEmpty()&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and aclines->size() = 2&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and bv1->notEmpty() and bv2->notEmpty()&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then bvdiff.abs()/bv1.nominalVoltage &lt; 0.1  else true endif"/>
              <details key="UnpairedTieFlow" value="&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=7 ruleID=UnpairedTieFlow&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let trmnls = self.Terminal in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let eis = trmnls.ConductingEquipment->select(oclIsTypeOf(Equivalents::EquivalentInjection))->asSequence() in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let ei1 = eis->at(1).oclAsType(Equivalents::EquivalentInjection) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let ei2 = eis->at(2).oclAsType(Equivalents::EquivalentInjection) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.boundaryPoint = true&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.description = null or self.description.size() &lt; 4 or self.description.substring(1, 4) &lt;> 'HVDC')&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnls->notEmpty()&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and eis->size() = 2&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ei1.p->notEmpty()&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ei2.p->notEmpty()&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ei1.q->notEmpty()&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ei2.q->notEmpty()&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then (ei1.p = 0 and ei2.p = 0 and ei1.q = 0 and ei2.q = 0)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(ei1.p &lt;> 0 and ei2.p &lt;> 0 and ei1.q &lt;> 0 and ei2.q &lt;> 0)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="RequiredSvVoltage" value="&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=RequiredSvVoltage&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let svv = self.SvVoltage in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.boundaryPoint = false&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then svv->notEmpty()&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="InconsistentCurrentLimits" value="&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=7 ruleID=InconsistentCurrentLimits&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let tn = self in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let trmnls = self.Terminal in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let aclines = trmnls.ConductingEquipment->selectByType(Wires::ACLineSegment)->asSequence() in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let acline1 = aclines->at(1) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let acline2 = aclines->at(2) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let trmnl1 = acline1.Terminals->select(TopologicalNode = tn)->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl2 = acline2.Terminals->select(TopologicalNode = tn)->asSequence()->at(1) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let cls1 = trmnl1.OperationalLimitSet.OperationalLimitValue->selectByType(OperationalLimits::CurrentLimit) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let cls2 = trmnl2.OperationalLimitSet.OperationalLimitValue->selectByType(OperationalLimits::CurrentLimit) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let cls1patl = cls1->select(OperationalLimitType.limitType = OperationalLimits::LimitTypeKind::patl) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let cls2patl = cls2->select(OperationalLimitType.limitType = OperationalLimits::LimitTypeKind::patl) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let cl1patl = cls1patl->asSequence()->at(1) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let cl2patl = cls2patl->asSequence()->at(1) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.type = DataSetType::cgm&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.boundaryPoint&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and cls1patl->size() = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and cls2patl->size() = 1&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then cl1patl.value = cl2patl.value  else true endif"/>
              <details key="Xt_InconsistentTnBaseVoltage" value="&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;--docReference not in QoCDCv3&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let tnbv = self.BaseVoltage in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let eco = self.ConnectivityNodeContainer in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let vlvlbv = eco.oclAsType(Core::VoltageLevel).BaseVoltage in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let trmnl = self.Terminal in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let ce = trmnl.ConductingEquipment in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let cebv = ce->select(BaseVoltage->notEmpty()) in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tnbv->notEmpty()&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tnbv.nominalVoltage > 0&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and eco->notEmpty()&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and eco.oclIsTypeOf(Core::VoltageLevel)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and vlvlbv->notEmpty()&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and vlvlbv.nominalVoltage > 0&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnl->notEmpty()&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ce->notEmpty()&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then tnbv.nominalVoltage = vlvlbv.nominalVoltage&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and cebv->forAll(self.BaseVoltage.nominalVoltage = tnbv.nominalVoltage) &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EReference" name="ConnectivityNodeContainer"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Core/ConnectivityNodeContainer"
                eOpposite="#//CGMES/IEC61970/Base/Core/ConnectivityNodeContainer/TopologicalNode"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="ReportingGroup"
                eType="#//CGMES/IEC61970/Base/Core/ReportingGroup" eOpposite="#//CGMES/IEC61970/Base/Core/ReportingGroup/TopologicalNode"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="BaseVoltage" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Core/BaseVoltage" eOpposite="#//CGMES/IEC61970/Base/Core/BaseVoltage/TopologicalNode"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="ConnectivityNodes"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Core/ConnectivityNode"
                eOpposite="#//CGMES/IEC61970/Base/Core/ConnectivityNode/TopologicalNode"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Terminal" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Core/Terminal" eOpposite="#//CGMES/IEC61970/Base/Core/Terminal/TopologicalNode"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="TopologicalIsland"
                eType="#//CGMES/IEC61970/Base/Topology/TopologicalIsland" eOpposite="#//CGMES/IEC61970/Base/Topology/TopologicalIsland/TopologicalNodes"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="SvInjection" eType="#//CGMES/IEC61970/Base/StateVariables/SvInjection"
                eOpposite="#//CGMES/IEC61970/Base/StateVariables/SvInjection/TopologicalNode"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="AngleRefTopologicalIsland"
                eType="#//CGMES/IEC61970/Base/Topology/TopologicalIsland" eOpposite="#//CGMES/IEC61970/Base/Topology/TopologicalIsland/AngleRefTopologicalNode"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="SvVoltage" eType="#//CGMES/IEC61970/Base/StateVariables/SvVoltage"
                eOpposite="#//CGMES/IEC61970/Base/StateVariables/SvVoltage/TopologicalNode"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="boundaryPoint"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="fromEndIsoCode"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="fromEndName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="fromEndNameTso"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="toEndIsoCode" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="toEndName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="toEndNameTso" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="TopologicalIsland" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="SmallTopologicalIsland SlackNode"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="SmallTopologicalIsland" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=5 ruleID=SmallTopologicalIsland&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tns = self.TopologicalNodes in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then  tns->size() > 3 or tns->forAll(SvVoltage->notEmpty() and SvVoltage.v->notEmpty() and SvVoltage.v &lt;> 0) else true endif"/>
              <details key="SlackNode" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=5 ruleID=SlackNode&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--2019-11-12 SM with referencePriority = 0 removed from test&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let artn = self.AngleRefTopologicalNode in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let artrmnl = artn.Terminal in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let smar = artrmnl.ConductingEquipment->select(oclIsTypeOf(Wires::SynchronousMachine)).oclAsType(Wires::SynchronousMachine) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let smar_rp = smar->select(referencePriority > 0) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let smar_rp_hp = smar_rp.referencePriority->min() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let all_tns = self.TopologicalNodes in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnls = all_tns.Terminal in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let sm = trmnls.ConductingEquipment->select(oclIsTypeOf(Wires::SynchronousMachine)).oclAsType(Wires::SynchronousMachine) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let sm_rp = sm->select(referencePriority > 0) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let sm_rp_hp = sm_rp.referencePriority->min() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and artn->notEmpty()&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and artrmnl->notEmpty()&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and all_tns->size() > 1&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and smar_rp->size() > 0&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and sm_rp->size() > 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then smar_rp_hp = sm_rp_hp&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EReference" name="TopologicalNodes"
                ordered="false" lowerBound="1" upperBound="-1" eType="#//CGMES/IEC61970/Base/Topology/TopologicalNode"
                eOpposite="#//CGMES/IEC61970/Base/Topology/TopologicalNode/TopologicalIsland"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="AngleRefTopologicalNode"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Topology/TopologicalNode"
                eOpposite="#//CGMES/IEC61970/Base/Topology/TopologicalNode/AngleRefTopologicalIsland"/>
          </eClassifiers>
        </eSubpackages>
        <eSubpackages name="Meas" nsURI="http://Model/1.0/CGMES/IEC61970/Base/Meas"
            nsPrefix="Meas">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
            <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
            <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
            <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
          </eAnnotations>
          <eClassifiers xsi:type="ecore:EClass" name="Accumulator" eSuperTypes="#//CGMES/IEC61970/Base/Meas/Measurement">
            <eStructuralFeatures xsi:type="ecore:EReference" name="LimitSets" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Meas/AccumulatorLimitSet"
                eOpposite="#//CGMES/IEC61970/Base/Meas/AccumulatorLimitSet/Measurements"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="AccumulatorValues"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Meas/AccumulatorValue"
                eOpposite="#//CGMES/IEC61970/Base/Meas/AccumulatorValue/Accumulator"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="AccumulatorLimit" eSuperTypes="#//CGMES/IEC61970/Base/Meas/Limit">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="LimitSet" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Meas/AccumulatorLimitSet" eOpposite="#//CGMES/IEC61970/Base/Meas/AccumulatorLimitSet/Limits"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="AccumulatorLimitSet" eSuperTypes="#//CGMES/IEC61970/Base/Meas/LimitSet">
            <eStructuralFeatures xsi:type="ecore:EReference" name="Measurements" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Meas/Accumulator" eOpposite="#//CGMES/IEC61970/Base/Meas/Accumulator/LimitSets"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Limits" ordered="false"
                lowerBound="1" upperBound="-1" eType="#//CGMES/IEC61970/Base/Meas/AccumulatorLimit"
                eOpposite="#//CGMES/IEC61970/Base/Meas/AccumulatorLimit/LimitSet"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="AccumulatorReset" eSuperTypes="#//CGMES/IEC61970/Base/Meas/Control">
            <eStructuralFeatures xsi:type="ecore:EReference" name="AccumulatorValue"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Meas/AccumulatorValue"
                eOpposite="#//CGMES/IEC61970/Base/Meas/AccumulatorValue/AccumulatorReset"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="AccumulatorValue" eSuperTypes="#//CGMES/IEC61970/Base/Meas/MeasurementValue">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Accumulator" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Meas/Accumulator" eOpposite="#//CGMES/IEC61970/Base/Meas/Accumulator/AccumulatorValues"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="AccumulatorReset"
                eType="#//CGMES/IEC61970/Base/Meas/AccumulatorReset" eOpposite="#//CGMES/IEC61970/Base/Meas/AccumulatorReset/AccumulatorValue"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Analog" eSuperTypes="#//CGMES/IEC61970/Base/Meas/Measurement">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="positiveFlowIn"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="AnalogValues" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Meas/AnalogValue" eOpposite="#//CGMES/IEC61970/Base/Meas/AnalogValue/Analog"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="LimitSets" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Meas/AnalogLimitSet"
                eOpposite="#//CGMES/IEC61970/Base/Meas/AnalogLimitSet/Measurements"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="AnalogControl" eSuperTypes="#//CGMES/IEC61970/Base/Meas/Control">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxValue" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="minValue" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="AnalogValue" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Meas/AnalogValue" eOpposite="#//CGMES/IEC61970/Base/Meas/AnalogValue/AnalogControl"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="AnalogLimit" eSuperTypes="#//CGMES/IEC61970/Base/Meas/Limit">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="LimitSet" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Meas/AnalogLimitSet" eOpposite="#//CGMES/IEC61970/Base/Meas/AnalogLimitSet/Limits"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="AnalogLimitSet" eSuperTypes="#//CGMES/IEC61970/Base/Meas/LimitSet">
            <eStructuralFeatures xsi:type="ecore:EReference" name="Measurements" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Meas/Analog" eOpposite="#//CGMES/IEC61970/Base/Meas/Analog/LimitSets"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Limits" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Meas/AnalogLimit" eOpposite="#//CGMES/IEC61970/Base/Meas/AnalogLimit/LimitSet"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="AnalogValue" eSuperTypes="#//CGMES/IEC61970/Base/Meas/MeasurementValue">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Analog" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Meas/Analog" eOpposite="#//CGMES/IEC61970/Base/Meas/Analog/AnalogValues"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="AnalogControl"
                eType="#//CGMES/IEC61970/Base/Meas/AnalogControl" eOpposite="#//CGMES/IEC61970/Base/Meas/AnalogControl/AnalogValue"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Command" eSuperTypes="#//CGMES/IEC61970/Base/Meas/Control">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="normalValue" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="ValueAliasSet"
                eType="#//CGMES/IEC61970/Base/Meas/ValueAliasSet" eOpposite="#//CGMES/IEC61970/Base/Meas/ValueAliasSet/Commands"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="DiscreteValue"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Meas/DiscreteValue" eOpposite="#//CGMES/IEC61970/Base/Meas/DiscreteValue/Command"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Control" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="controlType" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="operationInProgress"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="timeStamp" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDate"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="unitMultiplier"
                eType="#//CGMES/IEC61970/Base/Domain/UnitMultiplier"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="unitSymbol" eType="#//CGMES/IEC61970/Base/Domain/UnitSymbol"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="PowerSystemResource"
                eType="#//CGMES/IEC61970/Base/Core/PowerSystemResource" eOpposite="#//CGMES/IEC61970/Base/Core/PowerSystemResource/Controls"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Discrete" eSuperTypes="#//CGMES/IEC61970/Base/Meas/Measurement">
            <eStructuralFeatures xsi:type="ecore:EReference" name="ValueAliasSet"
                eType="#//CGMES/IEC61970/Base/Meas/ValueAliasSet" eOpposite="#//CGMES/IEC61970/Base/Meas/ValueAliasSet/Discretes"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="DiscreteValues"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Meas/DiscreteValue"
                eOpposite="#//CGMES/IEC61970/Base/Meas/DiscreteValue/Discrete"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="DiscreteValue" eSuperTypes="#//CGMES/IEC61970/Base/Meas/MeasurementValue">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Command" eType="#//CGMES/IEC61970/Base/Meas/Command"
                eOpposite="#//CGMES/IEC61970/Base/Meas/Command/DiscreteValue"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Discrete" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Meas/Discrete" eOpposite="#//CGMES/IEC61970/Base/Meas/Discrete/DiscreteValues"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Limit" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject"/>
          <eClassifiers xsi:type="ecore:EClass" name="LimitSet" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="isPercentageLimits"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Measurement" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="MeasTerminal MeasType MeasUnit"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="MeasTerminal" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=MeasTerminal&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.Terminal->notEmpty() and self.PowerSystemResource->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.Terminal.oclAsType(Core::Terminal).ConductingEquipment = self.PowerSystemResource&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.Terminal.oclAsType(DC::DCTerminal).DCConductingEquipment = self.PowerSystemResource &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.Terminal.oclAsType(DC::ACDCConverterDCTerminal).DCConductingEquipment = self.PowerSystemResource &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="MeasType" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=MeasType &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then self.measurementType = 'ThreePhasePower'&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.measurementType = 'ThreePhaseActivePower'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.measurementType = 'ThreePhaseReactivePower'&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.measurementType = 'LineCurrent'&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.measurementType = 'PhaseVoltage'&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.measurementType = 'LineToLineVoltage'&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.measurementType = 'Angle'&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.measurementType = 'TapPosition'&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.measurementType = 'SwitchPosition'&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="MeasUnit" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=MeasUnit &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then self.unitSymbol = IEC61970::Base::Domain::UnitSymbol::W&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.unitSymbol = IEC61970::Base::Domain::UnitSymbol::deg&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.unitSymbol = IEC61970::Base::Domain::UnitSymbol::VA&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.unitSymbol = IEC61970::Base::Domain::UnitSymbol::none&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.unitSymbol = IEC61970::Base::Domain::UnitSymbol::A&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.unitSymbol = IEC61970::Base::Domain::UnitSymbol::VAr&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.unitSymbol = IEC61970::Base::Domain::UnitSymbol::V&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.unitSymbol = IEC61970::Base::Domain::UnitSymbol::Hz&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="measurementType"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="phases" eType="#//CGMES/IEC61970/Base/Core/PhaseCode"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="unitSymbol" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Domain/UnitSymbol"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="unitMultiplier"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Domain/UnitMultiplier"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="PowerSystemResource"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Core/PowerSystemResource"
                eOpposite="#//CGMES/IEC61970/Base/Core/PowerSystemResource/Measurements"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Terminal" eType="#//CGMES/IEC61970/Base/Core/ACDCTerminal"
                eOpposite="#//CGMES/IEC61970/Base/Core/ACDCTerminal/Measurements"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="MeasurementValue" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="timeStamp" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDate"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="sensorAccuracy"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="MeasurementValueSource"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Meas/MeasurementValueSource"
                eOpposite="#//CGMES/IEC61970/Base/Meas/MeasurementValueSource/MeasurementValues"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="MeasurementValueQuality"
                eType="#//CGMES/IEC61970/Base/Meas/MeasurementValueQuality" eOpposite="#//CGMES/IEC61970/Base/Meas/MeasurementValueQuality/MeasurementValue"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="MeasurementValueQuality" eSuperTypes="#//CGMES/IEC61970/Base/Meas/Quality61850">
            <eStructuralFeatures xsi:type="ecore:EReference" name="MeasurementValue"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Meas/MeasurementValue"
                eOpposite="#//CGMES/IEC61970/Base/Meas/MeasurementValue/MeasurementValueQuality"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="MeasurementValueSource" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EReference" name="MeasurementValues"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Meas/MeasurementValue"
                eOpposite="#//CGMES/IEC61970/Base/Meas/MeasurementValue/MeasurementValueSource"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Quality61850" eSuperTypes="#//CGMES/mRID">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="badReference" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="estimatorReplaced"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="failure" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="oldData" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="operatorBlocked"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="oscillatory" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="outOfRange" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="overFlow" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="source" eType="#//CGMES/IEC61970/Base/SCADA/Source"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="suspect" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="test" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="validity" eType="#//CGMES/IEC61970/Base/Meas/Validity"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="RaiseLowerCommand" eSuperTypes="#//CGMES/IEC61970/Base/Meas/AnalogControl">
            <eStructuralFeatures xsi:type="ecore:EReference" name="ValueAliasSet"
                eType="#//CGMES/IEC61970/Base/Meas/ValueAliasSet" eOpposite="#//CGMES/IEC61970/Base/Meas/ValueAliasSet/RaiseLowerCommands"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="SetPoint" eSuperTypes="#//CGMES/IEC61970/Base/Meas/AnalogControl">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="normalValue" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="StringMeasurement" eSuperTypes="#//CGMES/IEC61970/Base/Meas/Measurement">
            <eStructuralFeatures xsi:type="ecore:EReference" name="StringMeasurementValues"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Meas/StringMeasurementValue"
                eOpposite="#//CGMES/IEC61970/Base/Meas/StringMeasurementValue/StringMeasurement"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="StringMeasurementValue" eSuperTypes="#//CGMES/IEC61970/Base/Meas/MeasurementValue">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="StringMeasurement"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Meas/StringMeasurement"
                eOpposite="#//CGMES/IEC61970/Base/Meas/StringMeasurement/StringMeasurementValues"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="Validity">
            <eLiterals name="GOOD" value="2"/>
            <eLiterals name="QUESTIONABLE" value="4"/>
            <eLiterals name="INVALID" value="6"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="ValueAliasSet" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EReference" name="Discretes" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Meas/Discrete" eOpposite="#//CGMES/IEC61970/Base/Meas/Discrete/ValueAliasSet"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Commands" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Meas/Command" eOpposite="#//CGMES/IEC61970/Base/Meas/Command/ValueAliasSet"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="RaiseLowerCommands"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Meas/RaiseLowerCommand"
                eOpposite="#//CGMES/IEC61970/Base/Meas/RaiseLowerCommand/ValueAliasSet"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Values" ordered="false"
                lowerBound="1" upperBound="-1" eType="#//CGMES/IEC61970/Base/Meas/ValueToAlias"
                eOpposite="#//CGMES/IEC61970/Base/Meas/ValueToAlias/ValueAliasSet"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="ValueToAlias" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="ValueAliasSet"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Meas/ValueAliasSet" eOpposite="#//CGMES/IEC61970/Base/Meas/ValueAliasSet/Values"/>
          </eClassifiers>
        </eSubpackages>
        <eSubpackages name="Core" nsURI="http://Model/1.0/CGMES/IEC61970/Base/Core"
            nsPrefix="Core">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
            <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
            <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
            <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
          </eAnnotations>
          <eClassifiers xsi:type="ecore:EClass" name="ACDCTerminal" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="sequenceNumber"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="BusNameMarker"
                eType="#//CGMES/IEC61970/Base/Topology/BusNameMarker" eOpposite="#//CGMES/IEC61970/Base/Topology/BusNameMarker/Terminal"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="OperationalLimitSet"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/OperationalLimits/OperationalLimitSet"
                eOpposite="#//CGMES/IEC61970/Base/OperationalLimits/OperationalLimitSet/Terminal"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Measurements" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Meas/Measurement" eOpposite="#//CGMES/IEC61970/Base/Meas/Measurement/Terminal"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="connected" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="BaseVoltage" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="NominalVoltage"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="NominalVoltage" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=NominalVoltage&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then self.nominalVoltage > 0&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="nominalVoltage"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="VoltageLevel" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Core/VoltageLevel" eOpposite="#//CGMES/IEC61970/Base/Core/VoltageLevel/BaseVoltage"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="TransformerEnds"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Wires/TransformerEnd"
                eOpposite="#//CGMES/IEC61970/Base/Wires/TransformerEnd/BaseVoltage"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="ConductingEquipment"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Core/ConductingEquipment"
                eOpposite="#//CGMES/IEC61970/Base/Core/ConductingEquipment/BaseVoltage"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="TopologicalNode"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Topology/TopologicalNode"
                eOpposite="#//CGMES/IEC61970/Base/Topology/TopologicalNode/BaseVoltage"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="BasicIntervalSchedule" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="startTime" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDate"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="value1Unit" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Domain/UnitSymbol"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="value2Unit" eType="#//CGMES/IEC61970/Base/Domain/UnitSymbol"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Bay" eSuperTypes="#//CGMES/IEC61970/Base/Core/EquipmentContainer">
            <eStructuralFeatures xsi:type="ecore:EReference" name="VoltageLevel" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Core/VoltageLevel" eOpposite="#//CGMES/IEC61970/Base/Core/VoltageLevel/Bays"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="ConductingEquipment" eSuperTypes="#//CGMES/IEC61970/Base/Core/Equipment">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="BranchBaseVoltage CEBaseVoltage TerminalCount1AC TerminalCount2AC TerminalSeqNumOrder PATL1 PATL2PT PATL4Current PATL4ActivePower PATL4ApparentPower SvPowerFlowInstances"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="BranchBaseVoltage" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=5 ruleID=BranchBaseVoltage&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.oclIsKindOf(Wires::ACLineSegment)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::SeriesCompensator)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Equivalents::EquivalentBranch))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.BaseVoltage->notEmpty() else true endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let pte = self.oclAsType(Wires::PowerTransformer).PowerTransformerEnd in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.oclIsKindOf(Wires::PowerTransformer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then pte->forAll(BaseVoltage->notEmpty()) else true endif"/>
              <details key="CEBaseVoltage" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=CEBaseVoltage&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if &#x9;(self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.oclIsKindOf(Wires::EnergyConsumer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::RegulatingCondEq)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::Connector)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::Ground)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::EarthFaultCompensator)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::Switch)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::SeriesCompensator))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then (self.BaseVoltage = null &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.EquipmentContainer.oclIsKindOf(Core::VoltageLevel) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.EquipmentContainer.oclIsKindOf(Core::Bay)))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(self.BaseVoltage &lt;> null and self.EquipmentContainer = null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(self.BaseVoltage &lt;> null and self.EquipmentContainer &lt;> null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ((self.EquipmentContainer.oclIsKindOf(Core::VoltageLevel)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.EquipmentContainer.oclAsType(Core::VoltageLevel).BaseVoltage = self.BaseVoltage)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(self.EquipmentContainer.oclIsKindOf(Core::Bay))&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.EquipmentContainer.oclAsType(Core::Bay).VoltageLevel.oclAsType(Core::VoltageLevel).BaseVoltage = self.BaseVoltage))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not self.EquipmentContainer.oclIsKindOf(Core::VoltageLevel))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="TerminalCount1AC" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=TerminalCount1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if&#x9;self.oclIsKindOf(Wires::EnergyConsumer) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.oclIsKindOf(Wires::RegulatingCondEq) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.oclIsKindOf(Wires::Connector) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.oclIsKindOf(Wires::Ground) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.oclIsKindOf(DC::ACDCConverter) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.oclIsKindOf(Wires::EarthFaultCompensator) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.oclIsKindOf(Equivalents::EquivalentInjection) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.oclIsKindOf(Wires::ExternalNetworkInjection)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.Terminals->size() = 1 else true endif"/>
              <details key="TerminalCount2AC" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=TerminalCount2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.oclIsKindOf(Wires::Conductor)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::SeriesCompensator)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::Switch)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Equivalents::EquivalentBranch))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.Terminals->size() = 2 else true endif"/>
              <details key="TerminalSeqNumOrder" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=TerminalSeqNumOrder&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.oclIsKindOf(Wires::EnergyConsumer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::RegulatingCondEq)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::Connector)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::Ground)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::EarthFaultCompensator)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Equivalents::EquivalentInjection)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::Conductor)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::SeriesCompensator)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::Switch)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Equivalents::EquivalentBranch)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::PowerTransformer))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.Terminals->size() > 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.Terminals->exists(sequenceNumber &lt;> 0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.Terminals->exists(t : Terminal | t.sequenceNumber = 1) else true endif"/>
              <details key="PATL1" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=PATL1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--2019-11-12 test changed from per limit value to per limit set&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let ols = self.Terminals.OperationalLimitSet in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.oclIsKindOf(Wires::ACLineSegment)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::SeriesCompensator))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(self.aggregate = null or self.aggregate = false) &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then ols->size() > 0&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ols->forAll(OperationalLimitValue.OperationalLimitType->select(limitType = OperationalLimits::LimitTypeKind::patl)->size() > 0)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="PATL2PT" value="&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=PATL2 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.oclIsKindOf(Wires::PowerTransformer)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.aggregate = null or self.aggregate = false)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then self.Terminals.OperationalLimitSet->size() > 0&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="PATL4Current" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=PATL4&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let limits = self.Terminals.OperationalLimitSet.OperationalLimitValue->selectByType(OperationalLimits::CurrentLimit)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;->select(OperationalLimitType.limitType = OperationalLimits::LimitTypeKind::patl)->asSequence() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let llow = 1 - (self.DataSet.PATL_LIMIT_VALUE_DIFF/2) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let lhigh = 1 + (self.DataSet.PATL_LIMIT_VALUE_DIFF/2) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.oclIsKindOf(Wires::ACLineSegment)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::SeriesCompensator))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(self.aggregate = null or self.aggregate = false)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.Terminals.OperationalLimitSet->size() = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;limits->size() = 2&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;llow*limits->at(2).value &lt; limits->at(1).value and limits->at(1).value &lt; lhigh*limits->at(2).value&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="PATL4ActivePower" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=PATL4&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let limits = self.Terminals.OperationalLimitSet.OperationalLimitValue->selectByType(OperationalLimits::ActivePowerLimit)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;->select(OperationalLimitType.limitType = OperationalLimits::LimitTypeKind::patl)->asSequence() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let llow = 1 - (self.DataSet.PATL_LIMIT_VALUE_DIFF/2) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let lhigh = 1 + (self.DataSet.PATL_LIMIT_VALUE_DIFF/2) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.oclIsKindOf(Wires::ACLineSegment)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::SeriesCompensator))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(self.aggregate = null or self.aggregate = false)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.Terminals.OperationalLimitSet->size() = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;limits->size() = 2&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;llow*limits->at(2).value &lt; limits->at(1).value and limits->at(1).value &lt; lhigh*limits->at(2).value&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="PATL4ApparentPower" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=PATL4&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let limits = self.Terminals.OperationalLimitSet.OperationalLimitValue->selectByType(OperationalLimits::ApparentPowerLimit)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;->select(OperationalLimitType.limitType = OperationalLimits::LimitTypeKind::patl)->asSequence() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let llow = 1 - (self.DataSet.PATL_LIMIT_VALUE_DIFF/2) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let lhigh = 1 + (self.DataSet.PATL_LIMIT_VALUE_DIFF/2) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.oclIsKindOf(Wires::ACLineSegment)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::SeriesCompensator))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(self.aggregate = null or self.aggregate = false)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.Terminals.OperationalLimitSet->size() = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;limits->size() = 2&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;llow*limits->at(2).value &lt; limits->at(1).value and limits->at(1).value &lt; lhigh*limits->at(2).value&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="SvPowerFlowInstances" value="&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;--docReferenceQoCDCv3 Level=5 ruleID=SvPowerFlowInstances&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.oclIsKindOf(Wires::RegulatingCondEq) &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::EnergyConsumer)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::EnergySource)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Equivalents::EquivalentInjection))&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then self.Terminals->asSequence()->at(1).SvPowerFlow &lt;> null&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Terminals" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Core/Terminal" eOpposite="#//CGMES/IEC61970/Base/Core/Terminal/ConductingEquipment"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="BaseVoltage" eType="#//CGMES/IEC61970/Base/Core/BaseVoltage"
                eOpposite="#//CGMES/IEC61970/Base/Core/BaseVoltage/ConductingEquipment"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="SvStatus" eType="#//CGMES/IEC61970/Base/StateVariables/SvStatus"
                eOpposite="#//CGMES/IEC61970/Base/StateVariables/SvStatus/ConductingEquipment"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="ConnectivityNode" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="CNTerminals CNContainment CNFromEndIsoCode CNFromEndNameLength CNFromEndNameTsoLength CNToEndIsoCode CNToEndNameLength CNToEndNameTsoLength"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="CNTerminals" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReferenceQoCDCv3 Level=3 ruleID=CNTerminals &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.Terminals->size() > 1 else true endif"/>
              <details key="CNContainment" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=CNContainment &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.ConnectivityNodeContainer.oclIsKindOf(Core::VoltageLevel) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.ConnectivityNodeContainer.oclIsKindOf(Core::Bay)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.ConnectivityNodeContainer.oclIsKindOf(Wires::Line)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="CNFromEndIsoCode" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=CNFromEndIsoCode&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let code = self.fromEndIsoCode in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.boundaryPoint = true&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then code &lt;> '' and self.DataSet.TsoCodeList->exists(TsoCodeList | TsoCodeList = code)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="CNFromEndNameLength" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=CNFromEndNameLength&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.fromEndName &lt;> null and self.fromEndName &lt;> ''&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then self.fromEndName.size() &lt;= self.DataSet.IO_NAME_LENGTH&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="CNFromEndNameTsoLength" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=CNFromEndNameTsoLength&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.fromEndNameTso &lt;> null and self.fromEndNameTso &lt;> ''&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then self.fromEndNameTso.size() &lt;= self.DataSet.IO_NAME_LENGTH&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="CNToEndIsoCode" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=CNToEndIsoCode&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let code = self.toEndIsoCode in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.boundaryPoint = true&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then code &lt;> '' and self.DataSet.TsoCodeList->exists(TsoCodeList | TsoCodeList = code)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="CNToEndNameLength" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=CNToEndNameLength&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.toEndName &lt;> null and self.toEndName &lt;> ''&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then self.toEndName.size() &lt;= self.DataSet.IO_NAME_LENGTH&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="CNToEndNameTsoLength" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=CNToEndNameTsoLength&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.toEndNameTso &lt;> null and self.toEndNameTso &lt;> ''&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then self.toEndNameTso.size() &lt;= self.DataSet.IO_NAME_LENGTH&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Terminals" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Core/Terminal" eOpposite="#//CGMES/IEC61970/Base/Core/Terminal/ConnectivityNode"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="ConnectivityNodeContainer"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Core/ConnectivityNodeContainer"
                eOpposite="#//CGMES/IEC61970/Base/Core/ConnectivityNodeContainer/ConnectivityNodes"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="TopologicalNode"
                eType="#//CGMES/IEC61970/Base/Topology/TopologicalNode" eOpposite="#//CGMES/IEC61970/Base/Topology/TopologicalNode/ConnectivityNodes"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="boundaryPoint"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="fromEndIsoCode"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="fromEndName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="fromEndNameTso"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="toEndIsoCode" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="toEndName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="toEndNameTso" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="ConnectivityNodeContainer" eSuperTypes="#//CGMES/IEC61970/Base/Core/PowerSystemResource">
            <eStructuralFeatures xsi:type="ecore:EReference" name="ConnectivityNodes"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Core/ConnectivityNode"
                eOpposite="#//CGMES/IEC61970/Base/Core/ConnectivityNode/ConnectivityNodeContainer"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="TopologicalNode"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Topology/TopologicalNode"
                eOpposite="#//CGMES/IEC61970/Base/Topology/TopologicalNode/ConnectivityNodeContainer"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Curve" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="CurveStyle"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="CurveStyle" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=CurveStyle&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.curveStyle = CurveStyle::straightLineYValues else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="curveStyle" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Core/CurveStyle"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="xUnit" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Domain/UnitSymbol"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="y1Unit" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Domain/UnitSymbol"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="y2Unit" eType="#//CGMES/IEC61970/Base/Domain/UnitSymbol"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="CurveDatas" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Core/CurveData" eOpposite="#//CGMES/IEC61970/Base/Core/CurveData/Curve"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="CurveData" eSuperTypes="#//CGMES/mRID">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="xvalue" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="y1value" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="y2value" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Curve" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Core/Curve" eOpposite="#//CGMES/IEC61970/Base/Core/Curve/CurveDatas"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="CurveStyle">
            <eLiterals name="constantYValue" value="2"/>
            <eLiterals name="straightLineYValues" value="4"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Equipment" eSuperTypes="#//CGMES/IEC61970/Base/Core/PowerSystemResource">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="GenerationContainment PTContainment SwitchContainment LineContainment SCContainment InjectionContainment BusbarSectionContainment EFCContainment EquivalentInjectionContainment JunctionContainment"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="GenerationContainment" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=GenerationContainment&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.oclIsKindOf(Generation::Production::GeneratingUnit) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Generation::Production::HydroPump))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.EquipmentContainer.oclIsKindOf(Core::Substation) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="PTContainment" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=PTContainment&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.oclIsKindOf(Wires::PowerTransformer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.EquipmentContainer.oclIsKindOf(DC::DCConverterUnit) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.EquipmentContainer.oclIsKindOf(Core::Substation) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="SwitchContainment" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=SwitchContainment&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.oclIsKindOf(Wires::Switch)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.EquipmentContainer.oclIsKindOf(Core::VoltageLevel) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; or self.EquipmentContainer.oclIsKindOf(Core::Bay)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; or self.EquipmentContainer.oclIsKindOf(DC::DCEquipmentContainer) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="LineContainment" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=LineContainment&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.oclIsKindOf(Wires::Conductor)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.EquipmentContainer.oclIsKindOf(Wires::Line)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="SCContainment" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=SCContainment&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.oclIsKindOf(Wires::SeriesCompensator)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.EquipmentContainer.oclIsKindOf(Wires::Line)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.EquipmentContainer.oclIsKindOf(Core::VoltageLevel)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.EquipmentContainer.oclIsKindOf(Core::Bay)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.EquipmentContainer.oclIsKindOf(DC::DCEquipmentContainer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="InjectionContainment" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=InjectionContainment&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.oclIsKindOf(Wires::RegulatingCondEq) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::EnergyConsumer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Equivalents::EquivalentShunt))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.EquipmentContainer.oclIsKindOf(Core::VoltageLevel)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.EquipmentContainer.oclIsKindOf(Core::Bay)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="BusbarSectionContainment" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=BusbarSectionContainment&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.oclIsKindOf(Wires::BusbarSection)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.EquipmentContainer.oclIsKindOf(Core::VoltageLevel)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="EFCContainment" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=EFCContainment&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.oclIsKindOf(Wires::EarthFaultCompensator)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.oclIsKindOf(Wires::Ground))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.EquipmentContainer.oclIsKindOf(Core::VoltageLevel)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="EquivalentInjectionContainment" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=EquivalentInjectionContainment&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.oclIsKindOf(Equivalents::EquivalentInjection)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.EquipmentContainer = null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.EquipmentContainer.oclIsKindOf(Core::VoltageLevel)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.EquipmentContainer.oclIsKindOf(Wires::Line)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="JunctionContainment" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=JunctionContainment&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.oclIsKindOf(Wires::Junction)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.EquipmentContainer.oclIsKindOf(Wires::Line) else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="aggregate" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="OperationalLimitSet"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/OperationalLimits/OperationalLimitSet"
                eOpposite="#//CGMES/IEC61970/Base/OperationalLimits/OperationalLimitSet/Equipment"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="EquipmentContainer"
                eType="#//CGMES/IEC61970/Base/Core/EquipmentContainer" eOpposite="#//CGMES/IEC61970/Base/Core/EquipmentContainer/Equipments"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="EquipmentContainer" eSuperTypes="#//CGMES/IEC61970/Base/Core/ConnectivityNodeContainer">
            <eStructuralFeatures xsi:type="ecore:EReference" name="Equipments" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Core/Equipment" eOpposite="#//CGMES/IEC61970/Base/Core/Equipment/EquipmentContainer"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="GeographicalRegion" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EReference" name="Regions" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Core/SubGeographicalRegion"
                eOpposite="#//CGMES/IEC61970/Base/Core/SubGeographicalRegion/Region"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="IdentifiedObject" eSuperTypes="#//CGMES/ModelObject">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="DescriptionLength EICLength NameLength ShortNameLength"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="DescriptionLength" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=DescriptionLength &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.description = null or  self.description.size() &lt;= self.DataSet.IO_DESCRIPTION_LENGTH &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="EICLength" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=EICLength&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.energyIdentCodeEic = null &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.energyIdentCodeEic = '' or self.energyIdentCodeEic.size() = self.DataSet.EIC_LENGTH&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="NameLength" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=NameLength &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.name &lt;> null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then  self.name &lt;> '' and self.name.size() &lt;= self.DataSet.IO_NAME_LENGTH&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="ShortNameLength" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=ShortNameLength&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.shortName = null or self.shortName.size() &lt;= self.DataSet.SHORT_NAME_LENGTH&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="energyIdentCodeEic"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="mRID" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="shortName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="PhaseCode">
            <eLiterals name="ABCN" value="2"/>
            <eLiterals name="ABC" value="4"/>
            <eLiterals name="ABN" value="6"/>
            <eLiterals name="ACN" value="8"/>
            <eLiterals name="BCN" value="10"/>
            <eLiterals name="AB" value="12"/>
            <eLiterals name="AC" value="14"/>
            <eLiterals name="BC" value="16"/>
            <eLiterals name="AN" value="18"/>
            <eLiterals name="BN" value="20"/>
            <eLiterals name="CN" value="22"/>
            <eLiterals name="A" value="24"/>
            <eLiterals name="B" value="26"/>
            <eLiterals name="C" value="28"/>
            <eLiterals name="N" value="30"/>
            <eLiterals name="s1N" value="32"/>
            <eLiterals name="s2N" value="34"/>
            <eLiterals name="s12N" value="36"/>
            <eLiterals name="s1" value="38"/>
            <eLiterals name="s2" value="40"/>
            <eLiterals name="s12" value="42"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="PowerSystemResource" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EReference" name="Controls" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Meas/Control" eOpposite="#//CGMES/IEC61970/Base/Meas/Control/PowerSystemResource"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Measurements" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Meas/Measurement" eOpposite="#//CGMES/IEC61970/Base/Meas/Measurement/PowerSystemResource"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="RegularIntervalSchedule" eSuperTypes="#//CGMES/IEC61970/Base/Core/BasicIntervalSchedule">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="timeStep" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="endTime" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDate"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="TimePoints" ordered="false"
                lowerBound="1" upperBound="-1" eType="#//CGMES/IEC61970/Base/Core/RegularTimePoint"
                eOpposite="#//CGMES/IEC61970/Base/Core/RegularTimePoint/IntervalSchedule"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="RegularTimePoint" eSuperTypes="#//CGMES/mRID">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="sequenceNumber"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="value1" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="value2" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="IntervalSchedule"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Core/RegularIntervalSchedule"
                eOpposite="#//CGMES/IEC61970/Base/Core/RegularIntervalSchedule/TimePoints"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="ReportingGroup" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EReference" name="BusNameMarker"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Topology/BusNameMarker"
                eOpposite="#//CGMES/IEC61970/Base/Topology/BusNameMarker/ReportingGroup"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="TopologicalNode"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Topology/TopologicalNode"
                eOpposite="#//CGMES/IEC61970/Base/Topology/TopologicalNode/ReportingGroup"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="SubGeographicalRegion" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EReference" name="DCLines" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/DC/DCLine" eOpposite="#//CGMES/IEC61970/Base/DC/DCLine/Region"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Substations" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Core/Substation" eOpposite="#//CGMES/IEC61970/Base/Core/Substation/Region"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Lines" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Wires/Line" eOpposite="#//CGMES/IEC61970/Base/Wires/Line/Region"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Region" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Core/GeographicalRegion" eOpposite="#//CGMES/IEC61970/Base/Core/GeographicalRegion/Regions"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Substation" eSuperTypes="#//CGMES/IEC61970/Base/Core/EquipmentContainer">
            <eStructuralFeatures xsi:type="ecore:EReference" name="VoltageLevels"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Core/VoltageLevel"
                eOpposite="#//CGMES/IEC61970/Base/Core/VoltageLevel/Substation"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="DCConverterUnit"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/DC/DCConverterUnit"
                eOpposite="#//CGMES/IEC61970/Base/DC/DCConverterUnit/Substation"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Region" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Core/SubGeographicalRegion" eOpposite="#//CGMES/IEC61970/Base/Core/SubGeographicalRegion/Substations"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Terminal" eSuperTypes="#//CGMES/IEC61970/Base/Core/ACDCTerminal">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="CNRequiredInEQOperations TerminalSeqNum"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="CNRequiredInEQOperations" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReferenceQoCDCv3 Level=3 ruleID=CNRequiredInEQOperations&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if  self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.isEQoperation = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.ConnectivityNode->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="TerminalSeqNum" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=TerminalSeqNum&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.ConductingEquipment.oclIsKindOf(Equivalents::EquivalentBranch)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or (self.ConductingEquipment.oclIsKindOf(Wires::ACLineSegment) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.HasFirstMutualCoupling->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.HasSecondMutualCoupling->notEmpty())))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.sequenceNumber = 1 or self.sequenceNumber = 2 else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="phases" eType="#//CGMES/IEC61970/Base/Core/PhaseCode"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="ConnectivityNode"
                eType="#//CGMES/IEC61970/Base/Core/ConnectivityNode" eOpposite="#//CGMES/IEC61970/Base/Core/ConnectivityNode/Terminals"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="TieFlow" ordered="false"
                upperBound="2" eType="#//CGMES/IEC61970/Base/ControlArea/TieFlow"
                eOpposite="#//CGMES/IEC61970/Base/ControlArea/TieFlow/Terminal"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="ConductingEquipment"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Core/ConductingEquipment"
                eOpposite="#//CGMES/IEC61970/Base/Core/ConductingEquipment/Terminals"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="HasSecondMutualCoupling"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Wires/MutualCoupling"
                eOpposite="#//CGMES/IEC61970/Base/Wires/MutualCoupling/Second_Terminal"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="RegulatingControl"
                eType="#//CGMES/IEC61970/Base/Wires/RegulatingControl" eOpposite="#//CGMES/IEC61970/Base/Wires/RegulatingControl/Terminal"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="HasFirstMutualCoupling"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Wires/MutualCoupling"
                eOpposite="#//CGMES/IEC61970/Base/Wires/MutualCoupling/First_Terminal"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="TransformerEnd"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Wires/TransformerEnd"
                eOpposite="#//CGMES/IEC61970/Base/Wires/TransformerEnd/Terminal"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="ConverterDCSides"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/DC/ACDCConverter"
                eOpposite="#//CGMES/IEC61970/Base/DC/ACDCConverter/PccTerminal"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="TopologicalNode"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Topology/TopologicalNode"
                eOpposite="#//CGMES/IEC61970/Base/Topology/TopologicalNode/Terminal"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="SvPowerFlow" eType="#//CGMES/IEC61970/Base/StateVariables/SvPowerFlow"
                eOpposite="#//CGMES/IEC61970/Base/StateVariables/SvPowerFlow/Terminal"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="VoltageLevel" eSuperTypes="#//CGMES/IEC61970/Base/Core/EquipmentContainer">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="highVoltageLimit"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="lowVoltageLimit"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Substation" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Core/Substation" eOpposite="#//CGMES/IEC61970/Base/Core/Substation/VoltageLevels"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="BaseVoltage" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Core/BaseVoltage" eOpposite="#//CGMES/IEC61970/Base/Core/BaseVoltage/VoltageLevel"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Bays" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Core/Bay" eOpposite="#//CGMES/IEC61970/Base/Core/Bay/VoltageLevel"/>
          </eClassifiers>
        </eSubpackages>
        <eSubpackages name="OperationalLimits" nsURI="http://Model/1.0/CGMES/IEC61970/Base/OperationalLimits"
            nsPrefix="OperationalLimits">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
            <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
            <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
            <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
          </eAnnotations>
          <eClassifiers xsi:type="ecore:EClass" name="ActivePowerLimit" eSuperTypes="#//CGMES/IEC61970/Base/OperationalLimits/OperationalLimit">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="OperationalLimitValueP"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="OperationalLimitValueP" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=OperationalLimitValue &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.value > 0 else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="ApparentPowerLimit" eSuperTypes="#//CGMES/IEC61970/Base/OperationalLimits/OperationalLimit">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="OperationalLimitValueS CGMCongestionS"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="OperationalLimitValueS" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=OperationalLimitValue &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.value > 0 else true endif"/>
              <details key="CGMCongestionS" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=8 ruleID=CGMCongestion&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let limtype = self.OperationalLimitType in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let limset = self.OperationalLimitSet in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let limset_trmnl = limset.Terminal in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl = limset_trmnl.oclAsType(Core::Terminal) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let ce = trmnl.ConductingEquipment in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tn = trmnl.TopologicalNode in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--let ei = tn.Terminal.ConductingEquipment->selectByType(Equivalents::EquivalentInjection)->select(igm = ce.igm) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let ei = tn.Terminal.ConductingEquipment->selectByType(Equivalents::EquivalentInjection) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let eitrmnl = ei.Terminals->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svpf = eitrmnl.SvPowerFlow in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svapparentsq = svpf.p*svpf.p + svpf.q*svpf.q  in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let limapparentsq = self.value*self.value in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.emf_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and limtype->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and limtype.limitType = LimitTypeKind::patl&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and limset_trmnl->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tn->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tn.boundaryPoint&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ce->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ei->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and eitrmnl->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and svpf->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then svapparentsq &lt; limapparentsq else true endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let eq = limset.Equipment in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let ce = eq.oclAsType(Core::ConductingEquipment) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl = ce.Terminals->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tn = trmnl.TopologicalNode in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--let ei = tn.Terminal.ConductingEquipment->selectByType(Equivalents::EquivalentInjection)->select(igm = ce.igm) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let ei = tn.Terminal.ConductingEquipment->selectByType(Equivalents::EquivalentInjection) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let eitrmnl = ei.Terminals->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svpf = eitrmnl.SvPowerFlow in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svapparentsq = svpf.p*svpf.p + svpf.q*svpf.q  in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let limapparentsq = self.value*self.value in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV2_1&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and limtype->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and limtype.limitType = LimitTypeKind::patl&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and eq->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnl->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tn->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tn.boundaryPoint&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ei->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and eitrmnl->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and svpf->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then svapparentsq &lt; limapparentsq else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="CurrentLimit" eSuperTypes="#//CGMES/IEC61970/Base/OperationalLimits/OperationalLimit">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="OperationalLimitValueI CGMCongestionI"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="OperationalLimitValueI" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=OperationalLimitValue &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.value > 0 else true endif"/>
              <details key="CGMCongestionI" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=8 ruleID=CGMCongestion&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let limtype = self.OperationalLimitType in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let limset = self.OperationalLimitSet in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let limset_trmnl = limset.Terminal in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl = limset_trmnl.oclAsType(Core::Terminal) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let ce = trmnl.ConductingEquipment in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tn = trmnl.TopologicalNode in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svv = tn.SvVoltage in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--let ei = tn.Terminal.ConductingEquipment->selectByType(Equivalents::EquivalentInjection)->select(igm = ce.igm) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let ei = tn.Terminal.ConductingEquipment->selectByType(Equivalents::EquivalentInjection) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let eitrmnl = ei.Terminals->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svpf = eitrmnl.SvPowerFlow in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svcurrentsq = (svpf.p*svpf.p + svpf.q*svpf.q)*1000000/(svv.v*svv.v)  in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let limcurrentsq = self.value*self.value in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.emf_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and limtype->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and limtype.limitType = LimitTypeKind::patl&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and limset_trmnl->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tn->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tn.boundaryPoint&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ce->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ei->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and eitrmnl->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and svpf->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and svv->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then svv.v > 0 and svcurrentsq &lt; limcurrentsq else true endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let eq = limset.Equipment in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let ce = eq.oclAsType(Core::ConductingEquipment) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl = ce.Terminals->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tn = trmnl.TopologicalNode in&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svv = tn.SvVoltage in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--let ei = tn.Terminal.ConductingEquipment->selectByType(Equivalents::EquivalentInjection)->select(igm = ce.igm) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let ei = tn.Terminal.ConductingEquipment->selectByType(Equivalents::EquivalentInjection) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let eitrmnl = ei.Terminals->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svpf = eitrmnl.SvPowerFlow in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svcurrentsq = (svpf.p*svpf.p + svpf.q*svpf.q)*1000000/(svv.v*svv.v)  in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let limcurrentsq = self.value*self.value in&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV2_1&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and limtype->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and limtype.limitType = LimitTypeKind::patl&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and eq->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnl->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tn->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tn.boundaryPoint&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ce->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ei->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and eitrmnl->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and svpf->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and svv->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then svv.v > 0 and svcurrentsq &lt; limcurrentsq else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="LimitTypeKind">
            <eLiterals name="patl" value="2"/>
            <eLiterals name="patlt" value="4"/>
            <eLiterals name="tatl" value="6"/>
            <eLiterals name="tc" value="8"/>
            <eLiterals name="tct" value="10"/>
            <eLiterals name="highVoltage" value="12"/>
            <eLiterals name="lowVoltage" value="14"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="OperationalLimit" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EReference" name="OperationalLimitType"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/OperationalLimits/OperationalLimitType"
                eOpposite="#//CGMES/IEC61970/Base/OperationalLimits/OperationalLimitType/OperationalLimit"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="OperationalLimitSet"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/OperationalLimits/OperationalLimitSet"
                eOpposite="#//CGMES/IEC61970/Base/OperationalLimits/OperationalLimitSet/OperationalLimitValue"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="OperationalLimitDirectionKind">
            <eLiterals name="high" value="2"/>
            <eLiterals name="low" value="4"/>
            <eLiterals name="absoluteValue" value="6"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="OperationalLimitSet" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="OperationalLimitSetAtTerminal PATL3"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="OperationalLimitSetAtTerminal" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=OperationalLimitSetAtTerminal &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.Terminal->notEmpty() and self.Equipment->isEmpty() else true endif"/>
              <details key="PATL3" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=PATL3 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--2019-11-12 max one patl limit is allowed per OperationalLimitSet, no patl limit is ok&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.OperationalLimitValue->selectByType(ApparentPowerLimit)->size() > 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.OperationalLimitValue->selectByType(ApparentPowerLimit).OperationalLimitType->select(limitType =LimitTypeKind::patl)->size() &lt;= 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.OperationalLimitValue->selectByType(ActivePowerLimit)->size() > 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.OperationalLimitValue->selectByType(ActivePowerLimit).OperationalLimitType->select(limitType = LimitTypeKind::patl)->size() &lt;= 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.OperationalLimitValue->selectByType(CurrentLimit)->size() > 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.OperationalLimitValue->selectByType(CurrentLimit).OperationalLimitType->select(limitType = LimitTypeKind::patl)->size() &lt;= 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Equipment" eType="#//CGMES/IEC61970/Base/Core/Equipment"
                eOpposite="#//CGMES/IEC61970/Base/Core/Equipment/OperationalLimitSet"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Terminal" eType="#//CGMES/IEC61970/Base/Core/ACDCTerminal"
                eOpposite="#//CGMES/IEC61970/Base/Core/ACDCTerminal/OperationalLimitSet"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="OperationalLimitValue"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/OperationalLimits/OperationalLimit"
                eOpposite="#//CGMES/IEC61970/Base/OperationalLimits/OperationalLimit/OperationalLimitSet"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="OperationalLimitType" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="AcceptableDuration"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="AcceptableDuration" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=AcceptableDuration &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.limitType &lt;> LimitTypeKind::patl&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.acceptableDuration > 0 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.limitType = LimitTypeKind::patl&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.acceptableDuration = 0 else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="acceptableDuration"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="limitType" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/OperationalLimits/LimitTypeKind"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="direction" eType="#//CGMES/IEC61970/Base/OperationalLimits/OperationalLimitDirectionKind"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="OperationalLimit"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/OperationalLimits/OperationalLimit"
                eOpposite="#//CGMES/IEC61970/Base/OperationalLimits/OperationalLimit/OperationalLimitType"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="VoltageLimit" eSuperTypes="#//CGMES/IEC61970/Base/OperationalLimits/OperationalLimit">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="OperationalLimitValueV PATL5"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="OperationalLimitValueV" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=OperationalLimitValue &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.value > 0 else true endif"/>
              <details key="PATL5" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=PATL5 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.OperationalLimitType.limitType &lt;> LimitTypeKind::patl else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
        </eSubpackages>
        <eSubpackages name="Wires" nsURI="http://Model/1.0/CGMES/IEC61970/Base/Wires"
            nsPrefix="Wires">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
            <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
            <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
            <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
          </eAnnotations>
          <eClassifiers xsi:type="ecore:EClass" name="ACLineSegment" eSuperTypes="#//CGMES/IEC61970/Base/Wires/Conductor">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="ACLineSegmentR ACLineSegmentX"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="ACLineSegmentR" value="&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=ACLineSegmentR&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.r >= 0 else true endif"/>
              <details key="ACLineSegmentX" value="&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=ACLineSegmentX &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let xlimit = self.DataSet.EQ_BRANCH_X_LIMIT in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.x >= xlimit else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="b0ch" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="bch" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="g0ch" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="gch" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="r" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="r0" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="shortCircuitEndTemperature"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="x" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="x0" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="AsynchronousMachine" eSuperTypes="#//CGMES/IEC61970/Base/Wires/RotatingMachine">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="converterFedDrive"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="efficiency" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="iaIrRatio" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="nominalFrequency"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="nominalSpeed" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="polePairNumber"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="ratedMechanicalPower"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="reversible" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="rxLockedRotorRatio"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="asynchronousMachineType"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Wires/AsynchronousMachineKind"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Breaker" eSuperTypes="#//CGMES/IEC61970/Base/Wires/ProtectedSwitch"/>
          <eClassifiers xsi:type="ecore:EClass" name="BusbarSection" eSuperTypes="#//CGMES/IEC61970/Base/Wires/Connector">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="ipMax" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Conductor" eSuperTypes="#//CGMES/IEC61970/Base/Core/ConductingEquipment">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="length" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Connector" eSuperTypes="#//CGMES/IEC61970/Base/Core/ConductingEquipment"/>
          <eClassifiers xsi:type="ecore:EClass" name="Disconnector" eSuperTypes="#//CGMES/IEC61970/Base/Wires/Switch"/>
          <eClassifiers xsi:type="ecore:EClass" name="EarthFaultCompensator" eSuperTypes="#//CGMES/IEC61970/Base/Core/ConductingEquipment">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="PhaseCodeGroundEFC"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="PhaseCodeGroundEFC" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=PhaseCodeGround&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl = self.Terminals->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnl->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then trmnl.phases = Core::PhaseCode::N else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="r" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="EnergySchedulingType" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EReference" name="EnergySource" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Wires/EnergySource"
                eOpposite="#//CGMES/IEC61970/Base/Wires/EnergySource/EnergySchedulingType"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="EnergySource" eSuperTypes="#//CGMES/IEC61970/Base/Core/ConductingEquipment">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="EnergySourceVoltage ValidDER DERActivePowerInfeedDiffW DERReactivePowerInfeedDiffW"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="EnergySourceVoltage" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=EnergySourceVoltage&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.voltageAngle = 0 and self.voltageMagnitude = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.voltageAngle = null and self.voltageMagnitude = null else true endif"/>
              <details key="ValidDER" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=ValidDER&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.activePower &lt;= 0 else true endif"/>
              <details key="DERActivePowerInfeedDiffW" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=DERActivePowerInfeedDiffW&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl = self.Terminals->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svpf = trmnl.SvPowerFlow in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let diff = svpf.p - self.activePower in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and self.DataSet.type = DataSetType::igm&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and svpf->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then diff.abs() &lt;= self.DataSet.SSH_SV_MAX_P_DIFF else true endif"/>
              <details key="DERReactivePowerInfeedDiffW" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=DERReactivePowerInfeedDiffW&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl = self.Terminals->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let sshq = self.reactivePower in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svq = trmnl.SvPowerFlow.q in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let diff = sshq - svq in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and self.DataSet.type = DataSetType::igm&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then diff.abs() &lt;= self.DataSet.SSH_SV_MAX_Q_DIFF else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="nominalVoltage"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="r" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="r0" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="rn" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="voltageAngle" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="voltageMagnitude"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="x" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="x0" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="xn" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="EnergySchedulingType"
                eType="#//CGMES/IEC61970/Base/Wires/EnergySchedulingType" eOpposite="#//CGMES/IEC61970/Base/Wires/EnergySchedulingType/EnergySource"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="activePower" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="reactivePower"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="EnergyConsumer" eSuperTypes="#//CGMES/IEC61970/Base/Core/ConductingEquipment">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="InstancesOfGeneralClassEnergyConsumer ValidLoad LoadActivePowerInfeedDiffW LoadReactivePowerInfeedDiffW"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="InstancesOfGeneralClassEnergyConsumer" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=InstancesOfGeneralClass&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.oclIsKindOf(LoadModel::ConformLoad) or self.oclIsKindOf(LoadModel::NonConformLoad) else true endif"/>
              <details key="ValidLoad" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=ValidLoad&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.p >= 0 else true endif"/>
              <details key="LoadActivePowerInfeedDiffW" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=LoadActivePowerInfeedDiffW&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl = self.Terminals->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svpf = trmnl.SvPowerFlow in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let diff = svpf.p - self.p in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and self.DataSet.type = DataSetType::igm&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and svpf->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then diff.abs() &lt;= self.DataSet.SSH_SV_MAX_P_DIFF else true endif"/>
              <details key="LoadReactivePowerInfeedDiffW" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=LoadReactivePowerInfeedDiffW&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl = self.Terminals->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let sshq = self.q in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svq = trmnl.SvPowerFlow.q in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let diff = sshq - svq in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and self.DataSet.type = DataSetType::igm&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then diff.abs() &lt;= self.DataSet.SSH_SV_MAX_Q_DIFF else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="pfixed" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="pfixedPct" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="qfixed" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="qfixedPct" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="LoadResponse" eType="#//CGMES/IEC61970/Base/LoadModel/LoadResponseCharacteristic"
                eOpposite="#//CGMES/IEC61970/Base/LoadModel/LoadResponseCharacteristic/EnergyConsumer"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="p" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="q" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="ExternalNetworkInjection" eSuperTypes="#//CGMES/IEC61970/Base/Wires/RegulatingCondEq">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="ENIActivePowerInfeedLim ENIActivePowerInfeedDiffW ENIReactivePowerInfeedLim ENIReactivePowerInfeedDiffW"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="ENIActivePowerInfeedLim" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=ENIActivePowerInfeedLim&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.p->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then -self.p &lt;= self.maxP and -self.p >= self.minP&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="ENIActivePowerInfeedDiffW" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=ENIActivePowerInfeedDiffW&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl = self.Terminals->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svpf = trmnl.SvPowerFlow in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let diff = svpf.p - self.p in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and self.DataSet.type = DataSetType::igm&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and svpf->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then diff.abs() &lt;= self.DataSet.SSH_SV_MAX_P_DIFF else true endif"/>
              <details key="ENIReactivePowerInfeedLim" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=ENIReactivePowerInfeedLim&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.q->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then -self.q &lt;= self.maxQ and -self.q >= self.minQ&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="ENIReactivePowerInfeedDiffW" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=ENIReactivePowerInfeedDiffW&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl = self.Terminals->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let sshq = self.q in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svq = trmnl.SvPowerFlow.q in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let diff = sshq - svq in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and self.DataSet.type = DataSetType::igm&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then diff.abs() &lt;= self.DataSet.SSH_SV_MAX_Q_DIFF else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="governorSCD" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="ikSecond" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxInitialSymShCCurrent"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxP" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxQ" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxR0ToX0Ratio"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxR1ToX1Ratio"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxZ0ToZ1Ratio"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="minInitialSymShCCurrent"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="minP" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="minQ" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="minR0ToX0Ratio"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="minR1ToX1Ratio"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="minZ0ToZ1Ratio"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="voltageFactor"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="referencePriority"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="p" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="q" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Ground" eSuperTypes="#//CGMES/IEC61970/Base/Core/ConductingEquipment">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="PhaseCodeGroundGround"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="PhaseCodeGroundGround" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=PhaseCodeGround&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl = self.Terminals->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnl->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then trmnl.phases = Core::PhaseCode::N else true endif"/>
            </eAnnotations>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="GroundDisconnector" eSuperTypes="#//CGMES/IEC61970/Base/Wires/Switch">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="PhaseCodeGroundGroundDiscon"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="PhaseCodeGroundGroundDiscon" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=PhaseCodeGround&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnls = self.Terminals in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnls->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then trmnls->forAll(phases = Core::PhaseCode::N) else true endif"/>
            </eAnnotations>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="GroundingImpedance" eSuperTypes="#//CGMES/IEC61970/Base/Wires/EarthFaultCompensator">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="x" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Junction" eSuperTypes="#//CGMES/IEC61970/Base/Wires/Connector"/>
          <eClassifiers xsi:type="ecore:EClass" name="Line" eSuperTypes="#//CGMES/IEC61970/Base/Core/EquipmentContainer">
            <eStructuralFeatures xsi:type="ecore:EReference" name="Region" eType="#//CGMES/IEC61970/Base/Core/SubGeographicalRegion"
                eOpposite="#//CGMES/IEC61970/Base/Core/SubGeographicalRegion/Lines"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="LinearShuntCompensator" eSuperTypes="#//CGMES/IEC61970/Base/Wires/ShuntCompensator">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="LinearShuntCompensatorG ShuntQ"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="LinearShuntCompensatorG" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=LinearShuntCompensatorG&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.gPerSection >= 0 else true endif"/>
              <details key="ShuntQ" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=ShuntQ;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl = self.Terminals->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tn = trmnl.TopologicalNode in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svpf = trmnl.SvPowerFlow in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svvolt = tn.SvVoltage in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svshunt = self.SvShuntCompensatorSections in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let v = svvolt.v in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let q = - self.bPerSection*v*v*svshunt.sections in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let diff = svpf.q - q in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and self.DataSet.type = DataSetType::igm&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.sections > 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnl->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnl.connected = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and svpf->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and svvolt->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and svshunt->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tn->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then diff.abs() &lt;= self.DataSet.SSH_SV_MAX_Q_SHUNT_DIFF&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="b0PerSection" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="bPerSection" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="g0PerSection" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="gPerSection" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="LoadBreakSwitch" eSuperTypes="#//CGMES/IEC61970/Base/Wires/ProtectedSwitch"/>
          <eClassifiers xsi:type="ecore:EClass" name="MutualCoupling" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="MCFirst MCSecond"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="MCFirst" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=MCFirst&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.First_Terminal->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.First_Terminal.ConductingEquipment.oclIsKindOf(Wires::ACLineSegment) else true endif"/>
              <details key="MCSecond" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=MCSecond&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.Second_Terminal->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.Second_Terminal.ConductingEquipment.oclIsKindOf(Wires::ACLineSegment) else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="b0ch" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="distance11" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="distance12" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="distance21" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="distance22" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="g0ch" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="r0" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="x0" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Second_Terminal"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Core/Terminal" eOpposite="#//CGMES/IEC61970/Base/Core/Terminal/HasSecondMutualCoupling"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="First_Terminal"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Core/Terminal" eOpposite="#//CGMES/IEC61970/Base/Core/Terminal/HasFirstMutualCoupling"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="NonlinearShuntCompensator" eSuperTypes="#//CGMES/IEC61970/Base/Wires/ShuntCompensator">
            <eStructuralFeatures xsi:type="ecore:EReference" name="NonlinearShuntCompensatorPoints"
                ordered="false" lowerBound="1" upperBound="-1" eType="#//CGMES/IEC61970/Base/Wires/NonlinearShuntCompensatorPoint"
                eOpposite="#//CGMES/IEC61970/Base/Wires/NonlinearShuntCompensatorPoint/NonlinearShuntCompensator"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="NonlinearShuntCompensatorPoint"
              eSuperTypes="#//CGMES/mRID">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="b" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="b0" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="g" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="g0" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="sectionNumber"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="NonlinearShuntCompensator"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Wires/NonlinearShuntCompensator"
                eOpposite="#//CGMES/IEC61970/Base/Wires/NonlinearShuntCompensator/NonlinearShuntCompensatorPoints"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="PerLengthLineParameter" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject"/>
          <eClassifiers xsi:type="ecore:EClass" name="PetersenCoil" eSuperTypes="#//CGMES/IEC61970/Base/Wires/EarthFaultCompensator">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="mode" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Wires/PetersenCoilModeKind"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="nominalU" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="offsetCurrent"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="positionCurrent"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="xGroundMax" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="xGroundMin" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="xGroundNominal"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="PetersenCoilModeKind">
            <eLiterals name="fixed" value="2"/>
            <eLiterals name="manual" value="4"/>
            <eLiterals name="automaticPositioning" value="6"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="PhaseTapChanger" eSuperTypes="#//CGMES/IEC61970/Base/Wires/TapChanger">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="ControlModeCompatibilityPTC TapChangerNeutralU"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="ControlModeCompatibilityPTC" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=ControlModeCompatibility&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.TapChangerControl->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.TapChangerControl.mode = RegulatingControlModeKind::activePower else true endif"/>
              <details key="TapChangerNeutralU" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=5 ruleID=TapChangerNeutralU&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let te = self.TransformerEnd in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let pte = te.oclAsType(PowerTransformerEnd) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and pte->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then  pte.ratedU = self.neutralU else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EReference" name="TransformerEnd"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Wires/TransformerEnd"
                eOpposite="#//CGMES/IEC61970/Base/Wires/TransformerEnd/PhaseTapChanger"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="PhaseTapChangerAsymmetrical"
              eSuperTypes="#//CGMES/IEC61970/Base/Wires/PhaseTapChangerNonLinear">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="windingConnectionAngle"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="PhaseTapChangerLinear" eSuperTypes="#//CGMES/IEC61970/Base/Wires/PhaseTapChanger">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="stepPhaseShiftIncrement"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="xMax" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="xMin" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="PhaseTapChangerNonLinear" eSuperTypes="#//CGMES/IEC61970/Base/Wires/PhaseTapChanger">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="voltageStepIncrement"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="xMax" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="xMin" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="PhaseTapChangerSymmetrical"
              eSuperTypes="#//CGMES/IEC61970/Base/Wires/PhaseTapChangerNonLinear"/>
          <eClassifiers xsi:type="ecore:EClass" name="PhaseTapChangerTable" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EReference" name="PhaseTapChangerTablePoint"
                ordered="false" lowerBound="1" upperBound="-1" eType="#//CGMES/IEC61970/Base/Wires/PhaseTapChangerTablePoint"
                eOpposite="#//CGMES/IEC61970/Base/Wires/PhaseTapChangerTablePoint/PhaseTapChangerTable"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="PhaseTapChangerTabular"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Wires/PhaseTapChangerTabular"
                eOpposite="#//CGMES/IEC61970/Base/Wires/PhaseTapChangerTabular/PhaseTapChangerTable"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="PhaseTapChangerTablePoint" eSuperTypes="#//CGMES/IEC61970/Base/Wires/TapChangerTablePoint">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="angle" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="PhaseTapChangerTable"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Wires/PhaseTapChangerTable"
                eOpposite="#//CGMES/IEC61970/Base/Wires/PhaseTapChangerTable/PhaseTapChangerTablePoint"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="PhaseTapChangerTabular" eSuperTypes="#//CGMES/IEC61970/Base/Wires/PhaseTapChanger">
            <eStructuralFeatures xsi:type="ecore:EReference" name="PhaseTapChangerTable"
                eType="#//CGMES/IEC61970/Base/Wires/PhaseTapChangerTable" eOpposite="#//CGMES/IEC61970/Base/Wires/PhaseTapChangerTable/PhaseTapChangerTabular"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="PowerTransformer" eSuperTypes="#//CGMES/IEC61970/Base/Core/ConductingEquipment">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="PTTerminalConsistencyPTECount PTTerminalConsistency PowerTransformerEndR PowerTransformerEndX"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="PTTerminalConsistencyPTECount" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=PTTerminalConsistency&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.PowerTransformerEnd->size() = 2 or self.PowerTransformerEnd->size() = 3 else true endif"/>
              <details key="PTTerminalConsistency" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=PTTerminalConsistency&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.PowerTransformerEnd.Terminal->includesAll(self.Terminals) else true endif"/>
              <details key="PowerTransformerEndR" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=PowerTransformerEndR&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let ends = self.PowerTransformerEnd->asSequence() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let end1 = ends->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let end2 = ends->at(2) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let end3 = ends->at(3) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let zb1 = (end1.ratedU * end1.ratedU) / end1.ratedS in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let zb2 = (end2.ratedU * end2.ratedU) / end2.ratedS in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let zb3 = (end3.ratedU * end3.ratedU) / end3.ratedS in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ends->size() = 2 and end1.ratedU > end2.ratedU&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then end1.r >= 0 and end2.r = 0 else true endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ends->size() = 2 and end1.ratedU &lt; end2.ratedU&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then end1.r = 0 and end2.r >= 0 else true endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.PowerTransformerEnd->size() = 3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then end1.r/zb1 + end2.r/zb2 + end3.r/zb3  >= 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="PowerTransformerEndX" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=PowerTransformerEndX&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let ends = self.PowerTransformerEnd->asSequence() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let end1 = ends->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let end2 = ends->at(2) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let end3 = ends->at(3) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let zb1 = (end1.ratedU * end1.ratedU) / end1.ratedS in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let zb2 = (end2.ratedU * end2.ratedU) / end2.ratedS in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let zb3 = (end3.ratedU * end3.ratedU) / end3.ratedS in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ends->size() = 2 and end1.ratedU  >  end2.ratedU&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then end1.x >  self.DataSet.EQ_BRANCH_X_LIMIT and end2.x = 0 else true endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.PowerTransformerEnd->size() = 2 and end1.ratedU &lt;  end2.ratedU&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then end2.x >  self.DataSet.EQ_BRANCH_X_LIMIT and end1.x = 0 else true endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.PowerTransformerEnd->size() = 3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then end1.x.abs() > self.DataSet.EQ_BRANCH_X_LIMIT &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and end2.x.abs() > self.DataSet.EQ_BRANCH_X_LIMIT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and end3.x.abs()  > self.DataSet.EQ_BRANCH_X_LIMIT &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="beforeShCircuitHighestOperatingCurrent"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="beforeShCircuitHighestOperatingVoltage"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="beforeShortCircuitAnglePf"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="highSideMinOperatingU"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="isPartOfGeneratorUnit"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="operationalValuesConsidered"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="PowerTransformerEnd"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Wires/PowerTransformerEnd"
                eOpposite="#//CGMES/IEC61970/Base/Wires/PowerTransformerEnd/PowerTransformer"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="PowerTransformerEnd" eSuperTypes="#//CGMES/IEC61970/Base/Wires/TransformerEnd">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="PowerTransformerEndRatedS PowerTransformerEndRatedU"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="PowerTransformerEndRatedS" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=RatedS&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.ratedS > 0"/>
              <details key="PowerTransformerEndRatedU" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=PowerTransformerEndRatedU&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.ratedU > 0"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="b" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="connectionKind"
                eType="#//CGMES/IEC61970/Base/Wires/WindingConnection"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="b0" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="phaseAngleClock"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="ratedS" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="g" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="ratedU" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="g0" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="r" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="r0" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="x" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="x0" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="PowerTransformer"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Wires/PowerTransformer"
                eOpposite="#//CGMES/IEC61970/Base/Wires/PowerTransformer/PowerTransformerEnd"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="ProtectedSwitch" eSuperTypes="#//CGMES/IEC61970/Base/Wires/Switch"/>
          <eClassifiers xsi:type="ecore:EClass" name="RatioTapChanger" eSuperTypes="#//CGMES/IEC61970/Base/Wires/TapChanger">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="TapChangerNeutralU ControlModeCompatibilityRTC TapChangerTargetRange"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="TapChangerNeutralU" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=5 ruleID=TapChangerNeutralU&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let te = self.TransformerEnd in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let pte = te.oclAsType(PowerTransformerEnd) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and pte->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then  pte.ratedU = self.neutralU else true endif"/>
              <details key="ControlModeCompatibilityRTC" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=ControlModeCompatibility&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.TapChangerControl->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.TapChangerControl.mode = RegulatingControlModeKind::voltage&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.TapChangerControl.mode = RegulatingControlModeKind::reactivePower&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.TapChangerControl.mode = RegulatingControlModeKind::powerFactor &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="TapChangerTargetRange" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=5 ruleID=TapChangerTargetRange&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--2019-11-12 Equality in test added&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tcc = self.TapChangerControl in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl = tcc.Terminal in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tn = trmnl.TopologicalNode in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let bv = tn.BaseVoltage in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let targetpu = tcc.targetValue/bv.nominalVoltage in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tcuc = 1 + (self.stepVoltageIncrement/100)*(self.highStep - self.neutralStep) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tclc = 1 - (self.stepVoltageIncrement/100)*(self.neutralStep - self.lowStep) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tcc->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnl->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tn->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and bv->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.controlEnabled&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tcc.enabled&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tcc.mode = RegulatingControlModeKind::voltage&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then tcuc.min(tclc) &lt;= targetpu and targetpu &lt;= tcuc.max(tclc)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="tculControlMode"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Wires/TransformerControlMode"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="stepVoltageIncrement"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="RatioTapChangerTable"
                eType="#//CGMES/IEC61970/Base/Wires/RatioTapChangerTable" eOpposite="#//CGMES/IEC61970/Base/Wires/RatioTapChangerTable/RatioTapChanger"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="TransformerEnd"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Wires/TransformerEnd"
                eOpposite="#//CGMES/IEC61970/Base/Wires/TransformerEnd/RatioTapChanger"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="RatioTapChangerTable" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EReference" name="RatioTapChangerTablePoint"
                ordered="false" lowerBound="1" upperBound="-1" eType="#//CGMES/IEC61970/Base/Wires/RatioTapChangerTablePoint"
                eOpposite="#//CGMES/IEC61970/Base/Wires/RatioTapChangerTablePoint/RatioTapChangerTable"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="RatioTapChanger"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Wires/RatioTapChanger"
                eOpposite="#//CGMES/IEC61970/Base/Wires/RatioTapChanger/RatioTapChangerTable"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="RatioTapChangerTablePoint" eSuperTypes="#//CGMES/IEC61970/Base/Wires/TapChangerTablePoint">
            <eStructuralFeatures xsi:type="ecore:EReference" name="RatioTapChangerTable"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Wires/RatioTapChangerTable"
                eOpposite="#//CGMES/IEC61970/Base/Wires/RatioTapChangerTable/RatioTapChangerTablePoint"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="ReactiveCapabilityCurve" eSuperTypes="#//CGMES/IEC61970/Base/Core/Curve">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="CurveXYValues RCCYValues RCCXValues1"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="CurveXYValues" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=CurveXYValues&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--2019-10-16 Logic in rule corrected and rule moved from Curve to RCC&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let xsorted = self.CurveDatas->sortedBy(xvalue) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.CurveDatas->size() > 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then (self.CurveDatas->size() = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(1).xvalue = xsorted->at(2).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(1).y1value = xsorted->at(2).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(1).y2value = xsorted->at(2).y2value)))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(self.CurveDatas->size() = 3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(1).xvalue = xsorted->at(2).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(1).y1value = xsorted->at(2).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(1).y2value = xsorted->at(2).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(2).xvalue = xsorted->at(3).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(2).y1value = xsorted->at(3).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(2).y2value = xsorted->at(3).y2value)))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(self.CurveDatas->size() = 4&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(1).xvalue = xsorted->at(2).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(1).y1value = xsorted->at(2).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(1).y2value = xsorted->at(2).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(2).xvalue = xsorted->at(3).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(2).y1value = xsorted->at(3).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(2).y2value = xsorted->at(3).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(3).xvalue = xsorted->at(4).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(3).y1value = xsorted->at(4).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(3).y2value = xsorted->at(4).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(self.CurveDatas->size() = 5&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(1).xvalue = xsorted->at(2).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(1).y1value = xsorted->at(2).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(1).y2value = xsorted->at(2).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(2).xvalue = xsorted->at(3).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(2).y1value = xsorted->at(3).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(2).y2value = xsorted->at(3).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(3).xvalue = xsorted->at(4).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(3).y1value = xsorted->at(4).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(3).y2value = xsorted->at(4).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(4).xvalue = xsorted->at(5).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(4).y1value = xsorted->at(5).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(4).y2value = xsorted->at(5).y2value)))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(self.CurveDatas->size() = 6&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(1).xvalue = xsorted->at(2).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(1).y1value = xsorted->at(2).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(1).y2value = xsorted->at(2).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(2).xvalue = xsorted->at(3).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(2).y1value = xsorted->at(3).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(2).y2value = xsorted->at(3).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(3).xvalue = xsorted->at(4).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(3).y1value = xsorted->at(4).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(3).y2value = xsorted->at(4).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(4).xvalue = xsorted->at(5).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(4).y1value = xsorted->at(5).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(4).y2value = xsorted->at(5).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(5).xvalue = xsorted->at(6).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(5).y1value = xsorted->at(6).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(5).y2value = xsorted->at(6).y2value))))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(self.CurveDatas->size() = 7&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(1).xvalue = xsorted->at(2).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(1).y1value = xsorted->at(2).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(1).y2value = xsorted->at(2).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(2).xvalue = xsorted->at(3).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(2).y1value = xsorted->at(3).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(2).y2value = xsorted->at(3).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(3).xvalue = xsorted->at(4).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(3).y1value = xsorted->at(4).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(3).y2value = xsorted->at(4).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(4).xvalue = xsorted->at(5).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(4).y1value = xsorted->at(5).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(4).y2value = xsorted->at(5).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(5).xvalue = xsorted->at(6).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(5).y1value = xsorted->at(6).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(5).y2value = xsorted->at(6).y2value)))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(6).xvalue = xsorted->at(7).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(6).y1value = xsorted->at(7).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(6).y2value = xsorted->at(7).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(self.CurveDatas->size() = 8&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(1).xvalue = xsorted->at(2).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(1).y1value = xsorted->at(2).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(1).y2value = xsorted->at(2).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(2).xvalue = xsorted->at(3).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(2).y1value = xsorted->at(3).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(2).y2value = xsorted->at(3).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(3).xvalue = xsorted->at(4).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(3).y1value = xsorted->at(4).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(3).y2value = xsorted->at(4).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(4).xvalue = xsorted->at(5).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(4).y1value = xsorted->at(5).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(4).y2value = xsorted->at(5).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(5).xvalue = xsorted->at(6).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(5).y1value = xsorted->at(6).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(5).y2value = xsorted->at(6).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(6).xvalue = xsorted->at(7).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(6).y1value = xsorted->at(7).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(6).y2value = xsorted->at(7).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(7).xvalue = xsorted->at(8).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(7).y1value = xsorted->at(8).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(7).y2value = xsorted->at(8).y2value)))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(self.CurveDatas->size() = 9&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(1).xvalue = xsorted->at(2).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(1).y1value = xsorted->at(2).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(1).y2value = xsorted->at(2).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(2).xvalue = xsorted->at(3).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(2).y1value = xsorted->at(3).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(2).y2value = xsorted->at(3).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(3).xvalue = xsorted->at(4).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(3).y1value = xsorted->at(4).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(3).y2value = xsorted->at(4).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(4).xvalue = xsorted->at(5).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(4).y1value = xsorted->at(5).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(4).y2value = xsorted->at(5).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(5).xvalue = xsorted->at(6).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(5).y1value = xsorted->at(6).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(5).y2value = xsorted->at(6).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(6).xvalue = xsorted->at(7).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(6).y1value = xsorted->at(7).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(6).y2value = xsorted->at(7).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(7).xvalue = xsorted->at(8).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(7).y1value = xsorted->at(8).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(7).y2value = xsorted->at(8).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(8).xvalue = xsorted->at(9).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(8).y1value = xsorted->at(9).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(8).y2value = xsorted->at(9).y2value)))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(self.CurveDatas->size() = 10&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(1).xvalue = xsorted->at(2).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(1).y1value = xsorted->at(2).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(1).y2value = xsorted->at(2).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(2).xvalue = xsorted->at(3).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(2).y1value = xsorted->at(3).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(2).y2value = xsorted->at(3).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(3).xvalue = xsorted->at(4).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(3).y1value = xsorted->at(4).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(3).y2value = xsorted->at(4).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(4).xvalue = xsorted->at(5).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(4).y1value = xsorted->at(5).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(4).y2value = xsorted->at(5).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(5).xvalue = xsorted->at(6).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(5).y1value = xsorted->at(6).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(5).y2value = xsorted->at(6).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(6).xvalue = xsorted->at(7).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(6).y1value = xsorted->at(7).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(6).y2value = xsorted->at(7).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(7).xvalue = xsorted->at(8).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(7).y1value = xsorted->at(8).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(7).y2value = xsorted->at(8).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(8).xvalue = xsorted->at(9).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(8).y1value = xsorted->at(9).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(8).y2value = xsorted->at(9).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(9).xvalue = xsorted->at(10).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(9).y1value = xsorted->at(10).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(9).y2value = xsorted->at(10).y2value)))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(self.CurveDatas->size() = 11&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(1).xvalue = xsorted->at(2).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(1).y1value = xsorted->at(2).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(1).y2value = xsorted->at(2).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(2).xvalue = xsorted->at(3).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(2).y1value = xsorted->at(3).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(2).y2value = xsorted->at(3).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(3).xvalue = xsorted->at(4).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(3).y1value = xsorted->at(4).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(3).y2value = xsorted->at(4).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(4).xvalue = xsorted->at(5).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(4).y1value = xsorted->at(5).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(4).y2value = xsorted->at(5).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(5).xvalue = xsorted->at(6).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(5).y1value = xsorted->at(6).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(5).y2value = xsorted->at(6).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(6).xvalue = xsorted->at(7).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(6).y1value = xsorted->at(7).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(6).y2value = xsorted->at(7).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(7).xvalue = xsorted->at(8).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(7).y1value = xsorted->at(8).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(7).y2value = xsorted->at(8).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(8).xvalue = xsorted->at(9).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(8).y1value = xsorted->at(9).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(8).y2value = xsorted->at(9).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(9).xvalue = xsorted->at(10).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(9).y1value = xsorted->at(10).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(9).y2value = xsorted->at(10).y2value))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (not(xsorted->at(10).xvalue = xsorted->at(11).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(10).y1value = xsorted->at(11).y1value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and xsorted->at(10).y2value = xsorted->at(11).y2value)))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.CurveDatas->size() > 11&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="RCCYValues" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=RCCYValues&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--2019-11-16 check for all equal added&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.CurveDatas->forAll(y2value >= y1value)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.CurveDatas->select(y2value = y1value)->size() &lt; self.DataSet->size()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="RCCXValues1" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=RCCXValues1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.CurveDatas->size() >= 2 else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EReference" name="EquivalentInjection"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Equivalents/EquivalentInjection"
                eOpposite="#//CGMES/IEC61970/Base/Equivalents/EquivalentInjection/ReactiveCapabilityCurve"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="InitiallyUsedBySynchronousMachines"
                ordered="false" lowerBound="1" upperBound="-1" eType="#//CGMES/IEC61970/Base/Wires/SynchronousMachine"
                eOpposite="#//CGMES/IEC61970/Base/Wires/SynchronousMachine/InitialReactiveCapabilityCurve"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="RegulatingCondEq" eSuperTypes="#//CGMES/IEC61970/Base/Core/ConductingEquipment">
            <eStructuralFeatures xsi:type="ecore:EReference" name="RegulatingControl"
                eType="#//CGMES/IEC61970/Base/Wires/RegulatingControl" eOpposite="#//CGMES/IEC61970/Base/Wires/RegulatingControl/RegulatingCondEq"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="controlEnabled"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="RegulatingControl" eSuperTypes="#//CGMES/IEC61970/Base/Core/PowerSystemResource">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="RCandTCCcontrollingObjectsRC ControlLinkedToTopology ReactiveControlAtBus TargetDB Xt_NoRegulatingCondEq Xt_TargetDeadbandOutOfRange"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="RCandTCCcontrollingObjectsRC" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=RCandTCCcontrollingObjects&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self->oclIsTypeOf(RegulatingControl)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.RegulatingCondEq->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="ControlLinkedToTopology" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=5 ruleID=ControlLinkedToTopology&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.Terminal->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.Terminal.TopologicalNode->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="ReactiveControlAtBus" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=ReactiveControlAtBus&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.Terminal->notEmpty() and self.mode = RegulatingControlModeKind::reactivePower&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then not(self.Terminal.ConductingEquipment.oclIsKindOf(Wires::BusbarSection))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="TargetDB" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=TargetDB&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.discrete&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.enabled&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.targetDeadband->notEmpty() and self.targetDeadband > 0 else true endif"/>
              <details key="Xt_NoRegulatingCondEq" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference not in QoCDCv3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.RegulatingCondEq->size() > 0 else true endif"/>
              <details key="Xt_TargetDeadbandOutOfRange" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference not in QoCDCv3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.mode = RegulatingControlModeKind::voltage&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.targetValue > self.targetDeadband/2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="mode" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Wires/RegulatingControlModeKind"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="RegulatingCondEq"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Wires/RegulatingCondEq"
                eOpposite="#//CGMES/IEC61970/Base/Wires/RegulatingCondEq/RegulatingControl"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="RegulationSchedule"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Wires/RegulationSchedule"
                eOpposite="#//CGMES/IEC61970/Base/Wires/RegulationSchedule/RegulatingControl"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Terminal" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Core/Terminal" eOpposite="#//CGMES/IEC61970/Base/Core/Terminal/RegulatingControl"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="discrete" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="enabled" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="targetDeadband"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="targetValue" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="targetValueUnitMultiplier"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Domain/UnitMultiplier"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="RegulatingControlModeKind">
            <eLiterals name="voltage" value="2"/>
            <eLiterals name="activePower" value="4"/>
            <eLiterals name="reactivePower" value="6"/>
            <eLiterals name="currentFlow" value="8"/>
            <eLiterals name="admittance" value="10"/>
            <eLiterals name="timeScheduled" value="12"/>
            <eLiterals name="temperature" value="14"/>
            <eLiterals name="powerFactor" value="16"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="RegulationSchedule" eSuperTypes="#//CGMES/IEC61970/Base/LoadModel/SeasonDayTypeSchedule">
            <eStructuralFeatures xsi:type="ecore:EReference" name="RegulatingControl"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Wires/RegulatingControl"
                eOpposite="#//CGMES/IEC61970/Base/Wires/RegulatingControl/RegulationSchedule"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="RotatingMachine" eSuperTypes="#//CGMES/IEC61970/Base/Wires/RegulatingCondEq">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="RotatingMachineRatedS GenActivePowerInfeedDiffW GenReactivePowerInfeedDiffW"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="RotatingMachineRatedS" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=RatedS&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.ratedS > 0 else true endif"/>
              <details key="GenActivePowerInfeedDiffW" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=GenActivePowerInfeedDiffW&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl = self.Terminals->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svpf = trmnl.SvPowerFlow in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let diff = svpf.p - self.p in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and self.DataSet.type = DataSetType::igm&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and svpf->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then diff.abs() &lt;= self.DataSet.SSH_SV_MAX_P_DIFF else true endif"/>
              <details key="GenReactivePowerInfeedDiffW" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=GenReactivePowerInfeedDiffW&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl = self.Terminals->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let sshq = self.q in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svq = trmnl.SvPowerFlow.q in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let diff = sshq - svq in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and self.DataSet.type = DataSetType::igm&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then diff.abs() &lt;= self.DataSet.SSH_SV_MAX_Q_DIFF else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="ratedPowerFactor"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="ratedS" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="ratedU" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="GeneratingUnit"
                eType="#//CGMES/IEC61970/Base/Generation/Production/GeneratingUnit"
                eOpposite="#//CGMES/IEC61970/Base/Generation/Production/GeneratingUnit/RotatingMachine"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="HydroPump" eType="#//CGMES/IEC61970/Base/Generation/Production/HydroPump"
                eOpposite="#//CGMES/IEC61970/Base/Generation/Production/HydroPump/RotatingMachine"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="p" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="q" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="SVCControlMode">
            <eLiterals name="reactivePower" value="2"/>
            <eLiterals name="voltage" value="4"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="SeriesCompensator" eSuperTypes="#//CGMES/IEC61970/Base/Core/ConductingEquipment">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="SeriesCompensatorX"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="SeriesCompensatorX" value="&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=SeriesCompensatorX&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;--2019-11-12 absolute value conversion added&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let xlimit = self.DataSet.EQ_BRANCH_X_LIMIT in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.x.abs() >= xlimit else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="r" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="r0" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="x" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="x0" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="varistorPresent"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="varistorRatedCurrent"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="varistorVoltageThreshold"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="ShortCircuitRotorKind">
            <eLiterals name="salientPole1" value="2"/>
            <eLiterals name="salientPole2" value="4"/>
            <eLiterals name="turboSeries1" value="6"/>
            <eLiterals name="turboSeries2" value="8"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="ShuntCompensator" eSuperTypes="#//CGMES/IEC61970/Base/Wires/RegulatingCondEq">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="ShuntCompensatorSensitivity ShuntCompensatorSections SCSections ControlModeCompatibilityShunt DiscreteControlSC ContinuousControlSC RequiredSvSCSection"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="ShuntCompensatorSensitivity" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=ShuntCompensatorSensitivity&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.voltageSensitivity >= 0 else true endif"/>
              <details key="ShuntCompensatorSections" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=ShuntCompensatorSections&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.normalSections >= 0 and self.normalSections &lt;= self.maximumSections else true endif"/>
              <details key="SCSections" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=SCSections&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.sections >= 0 and self.sections &lt;= self.maximumSections else true endif"/>
              <details key="ControlModeCompatibilityShunt" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=ControlModeCompatibility&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.RegulatingControl->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.RegulatingControl.mode = RegulatingControlModeKind::voltage&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.RegulatingControl.mode = RegulatingControlModeKind::reactivePower&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.RegulatingControl.mode = RegulatingControlModeKind::powerFactor &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="DiscreteControlSC" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=DiscreteControl&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let rc = self.RegulatingControl in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let floor = self.sections.floor() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.controlEnabled&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and rc->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and rc.discrete&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and rc.enabled&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.sections->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.sections - floor = 0 else true endif"/>
              <details key="ContinuousControlSC" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=ContinuousControl&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let rc = self.RegulatingControl in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.controlEnabled&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and rc->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and rc.enabled&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then rc.discrete else true endif"/>
              <details key="RequiredSvSCSection" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=RequiredSvSCSection&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.SvShuntCompensatorSections->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="aVRDelay" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="grounded" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="maximumSections"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="nomU" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="normalSections"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="switchOnCount"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="switchOnDate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDate"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="voltageSensitivity"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="SvShuntCompensatorSections"
                eType="#//CGMES/IEC61970/Base/StateVariables/SvShuntCompensatorSections"
                eOpposite="#//CGMES/IEC61970/Base/StateVariables/SvShuntCompensatorSections/ShuntCompensator"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="sections" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="StaticVarCompensator" eSuperTypes="#//CGMES/IEC61970/Base/Wires/RegulatingCondEq">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="SVCRatings SVCVoltage SVCSlope ControlModeCompatibilitySVC"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="SVCRatings" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=SVCRatings &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.capacitiveRating > 0 and self.inductiveRating &lt; 0 else true endif"/>
              <details key="SVCVoltage" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=SVCVoltage &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let rc = self.RegulatingControl in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and rc.mode = Wires::RegulatingControlModeKind::voltage&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then rc->notEmpty() and  rc.targetValue > 0 else true endif"/>
              <details key="SVCSlope" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=SVCSlope&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.slope >= 0 else true endif"/>
              <details key="ControlModeCompatibilitySVC" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=ControlModeCompatibility&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.RegulatingControl->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.RegulatingControl.mode = RegulatingControlModeKind::voltage&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.RegulatingControl.mode = RegulatingControlModeKind::reactivePower&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="capacitiveRating"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="inductiveRating"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="slope" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="sVCControlMode"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Wires/SVCControlMode"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="voltageSetPoint"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="q" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Switch" eSuperTypes="#//CGMES/IEC61970/Base/Core/ConductingEquipment">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="SwitchTerminals SwitchVL SwitchTN1 SwitchOpenVsConnected"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="SwitchTerminals" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=5 ruleID=SwitchTerminals&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl1 = self.Terminals->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl2 = self.Terminals->asSequence()->at(2) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.isEQoperation = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnl1->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnl2->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnl1.ConnectivityNode->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnl2.ConnectivityNode->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then trmnl1.ConnectivityNode &lt;> trmnl2.ConnectivityNode else true endif"/>
              <details key="SwitchVL" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=5 ruleID=SwitchVL&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl1 = self.Terminals->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl2 = self.Terminals->asSequence()->at(2) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tn1 = trmnl1.TopologicalNode in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tn2 = trmnl2.TopologicalNode in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let container1 = tn1.ConnectivityNodeContainer in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let container2 = tn2.ConnectivityNodeContainer in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnl1->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnl2->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tn1->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tn2->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and container1->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and container2->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and container1.oclIsKindOf(Core::VoltageLevel)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and container2.oclIsKindOf(Core::VoltageLevel)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then container1 = container2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="SwitchTN1" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=5 ruleID=SwitchTN1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl1 = self.Terminals->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl2 = self.Terminals->asSequence()->at(2) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnl1->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnl2->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnl1.TopologicalNode->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnl2.TopologicalNode->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.retained = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then trmnl1.TopologicalNode &lt;> trmnl2.TopologicalNode&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="SwitchOpenVsConnected" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=5 ruleID=SwitchOpenVsConnected&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl1 = self.Terminals->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl2 = self.Terminals->asSequence()->at(2) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnl1->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnl2->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then trmnl1.connected = true and trmnl2.connected = true else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="normalOpen" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="ratedCurrent" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="retained" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="SwitchSchedules"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Wires/SwitchSchedule"
                eOpposite="#//CGMES/IEC61970/Base/Wires/SwitchSchedule/Switch"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="open" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="SwitchSchedule" eSuperTypes="#//CGMES/IEC61970/Base/LoadModel/SeasonDayTypeSchedule">
            <eStructuralFeatures xsi:type="ecore:EReference" name="Switch" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Wires/Switch" eOpposite="#//CGMES/IEC61970/Base/Wires/Switch/SwitchSchedules"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="SynchronousMachine" eSuperTypes="#//CGMES/IEC61970/Base/Wires/RotatingMachine">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="SynchronousCondenser SMQLimits1 SMQLimits2 RCCXValues2 RCCXValues3 RCCXValues4 GenReactivePowerInfeedLim ControlModeCompatibilitySM ControlOfAnotherIsland GenRCCPowerInfeed Xt_RatedSunrealistic"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="SynchronousCondenser" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=SynchronousCondenser&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.type = SynchronousMachineKind::condenser&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.GeneratingUnit->isEmpty() else true endif"/>
              <details key="SMQLimits1" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=SMQLimits1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.minQ &lt;= self.maxQ else true endif"/>
              <details key="SMQLimits2" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=SMQLimits2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--2019-10-09 rule logic changed from 'and' to 'or' for maxq minq/LOO &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.RegulatingControl->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.maxQ &lt;> 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.minQ &lt;> 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.InitialReactiveCapabilityCurve->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="RCCXValues2" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference  QoCDCv3 Level=3 ruleID=RCCXValues2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.GeneratingUnit->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.GeneratingUnit.minOperatingP &lt; 0 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.InitialReactiveCapabilityCurve->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.InitialReactiveCapabilityCurve.CurveDatas->size() >= 3 else true endif"/>
              <details key="RCCXValues3" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference  QoCDCv3 Level=3 ruleID=RCCXValues3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let curvedata = self.InitialReactiveCapabilityCurve.CurveDatas in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.InitialReactiveCapabilityCurve->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.GeneratingUnit->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then curvedata->exists(xvalue >= self.GeneratingUnit.minOperatingP)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and  curvedata->exists(xvalue &lt;= self.GeneratingUnit.maxOperatingP)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="RCCXValues4" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=RCCXValues4&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let curvedata = self.InitialReactiveCapabilityCurve.CurveDatas in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let sslim = self.ratedS * self.ratedS in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.InitialReactiveCapabilityCurve->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.ratedS->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.ratedS &lt;> 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then curvedata->forAll(xvalue*xvalue + y1value*y1value &lt;= sslim)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and curvedata->forAll(xvalue*xvalue + y2value*y2value &lt;= sslim) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="GenReactivePowerInfeedLim" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=6 ruleID=GenReactivePowerInfeedLim&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.maxQ->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.maxQ &lt;> 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.minQ->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.minQ &lt;> 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.q->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.q &lt;> 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then -self.q &lt;= self.maxQ and -self.q >= self.minQ&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="ControlModeCompatibilitySM" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=ControlModeCompatibility&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.RegulatingControl->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.RegulatingControl.mode = RegulatingControlModeKind::voltage&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.RegulatingControl.mode = RegulatingControlModeKind::reactivePower&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.RegulatingControl.mode = RegulatingControlModeKind::powerFactor &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="ControlOfAnotherIsland" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=5 ruleID=ControlOfAnotherIsland&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let rc = self.RegulatingControl in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let ctr_trmnl = rc.Terminal in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let ctr_tn = ctr_trmnl.TopologicalNode in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let ctr_isl = ctr_tn.TopologicalIsland in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let sm_trmnl = self.Terminals->asSequence()->at(1) in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let sm_tn = sm_trmnl.TopologicalNode in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let sm_isl = sm_tn.TopologicalIsland in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.controlEnabled&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.p->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.p &lt;> 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and rc->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and rc.enabled&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ctr_trmnl->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ctr_tn->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and sm_trmnl->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and sm_tn->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then ctr_isl->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and sm_isl->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ctr_isl = sm_isl&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="GenRCCPowerInfeed" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=GenRCCPowerInfeed&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let cdata = self.InitialReactiveCapabilityCurve.CurveDatas->sortedBy(xvalue) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.InitialReactiveCapabilityCurve->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and cdata->size() > 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.p &lt;> 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then (cdata->size() = 2 and -self.p &lt;= cdata->at(2).xvalue and -self.p >= cdata->at(1).xvalue &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= cdata.y2value->max() and -self.q >= cdata.y1value->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 3 and -self.p &lt;= cdata->at(2).xvalue and -self.p >= cdata->at(1).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(2).y2value, cdata->at(1).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(2).y1value, cdata->at(1).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 3 and -self.p &lt;= cdata->at(3).xvalue and -self.p > cdata->at(2).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(3).y2value, cdata->at(2).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(3).y1value, cdata->at(2).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 4 and -self.p &lt;= cdata->at(2).xvalue and -self.p >= cdata->at(1).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(2).y2value, cdata->at(1).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(2).y1value, cdata->at(1).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 4 and -self.p &lt;= cdata->at(3).xvalue and -self.p > cdata->at(2).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(3).y2value, cdata->at(2).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(3).y1value, cdata->at(2).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 4 and -self.p &lt;= cdata->at(4).xvalue and -self.p > cdata->at(3).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(4).y2value, cdata->at(3).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(4).y1value, cdata->at(3).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 5 and -self.p &lt;= cdata->at(2).xvalue and -self.p >= cdata->at(1).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(2).y2value, cdata->at(1).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(2).y1value, cdata->at(1).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 5 and -self.p &lt;= cdata->at(3).xvalue and -self.p > cdata->at(2).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(3).y2value, cdata->at(2).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(3).y1value, cdata->at(2).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 5 and -self.p &lt;= cdata->at(4).xvalue and -self.p > cdata->at(3).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(4).y2value, cdata->at(3).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(4).y1value, cdata->at(3).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 5 and -self.p &lt;= cdata->at(5).xvalue and -self.p > cdata->at(4).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(5).y2value, cdata->at(4).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(5).y1value, cdata->at(4).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 6 and -self.p &lt;= cdata->at(2).xvalue and -self.p >= cdata->at(1).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(2).y2value, cdata->at(1).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(2).y1value, cdata->at(1).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 6 and -self.p &lt;= cdata->at(3).xvalue and -self.p > cdata->at(2).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(3).y2value, cdata->at(2).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(3).y1value, cdata->at(2).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 6 and -self.p &lt;= cdata->at(4).xvalue and -self.p > cdata->at(3).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(4).y2value, cdata->at(3).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(4).y1value, cdata->at(3).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 6 and -self.p &lt;= cdata->at(5).xvalue and -self.p > cdata->at(4).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(5).y2value, cdata->at(4).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(5).y1value, cdata->at(4).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 6 and -self.p &lt;= cdata->at(6).xvalue and -self.p > cdata->at(5).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(6).y2value, cdata->at(5).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(6).y1value, cdata->at(5).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 7 and -self.p &lt;= cdata->at(2).xvalue and -self.p >= cdata->at(1).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(2).y2value, cdata->at(1).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(2).y1value, cdata->at(1).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 7 and -self.p &lt;= cdata->at(3).xvalue and -self.p > cdata->at(2).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(3).y2value, cdata->at(2).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(3).y1value, cdata->at(2).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 7 and -self.p &lt;= cdata->at(4).xvalue and -self.p > cdata->at(3).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(4).y2value, cdata->at(3).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(4).y1value, cdata->at(3).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 7 and -self.p &lt;= cdata->at(5).xvalue and -self.p > cdata->at(4).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(5).y2value, cdata->at(4).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(5).y1value, cdata->at(4).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 7 and -self.p &lt;= cdata->at(6).xvalue and -self.p > cdata->at(5).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(7).y2value, cdata->at(6).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(7).y1value, cdata->at(6).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 8 and -self.p &lt;= cdata->at(2).xvalue and -self.p >= cdata->at(1).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(2).y2value, cdata->at(1).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(2).y1value, cdata->at(1).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 8 and -self.p &lt;= cdata->at(3).xvalue and -self.p > cdata->at(2).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(3).y2value, cdata->at(2).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(3).y1value, cdata->at(2).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 8 and -self.p &lt;= cdata->at(4).xvalue and -self.p > cdata->at(3).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(4).y2value, cdata->at(3).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(4).y1value, cdata->at(3).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 8 and -self.p &lt;= cdata->at(5).xvalue and -self.p > cdata->at(4).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(5).y2value, cdata->at(4).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(5).y1value, cdata->at(4).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 8 and -self.p &lt;= cdata->at(7).xvalue and -self.p > cdata->at(6).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(7).y2value, cdata->at(6).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(7).y1value, cdata->at(6).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 8 and -self.p &lt;= cdata->at(8).xvalue and -self.p > cdata->at(8).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(8).y2value, cdata->at(7).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(8).y1value, cdata->at(7).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 9 and -self.p &lt;= cdata->at(2).xvalue and -self.p >= cdata->at(1).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(2).y2value, cdata->at(1).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(2).y1value, cdata->at(1).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 9 and -self.p &lt;= cdata->at(3).xvalue and -self.p > cdata->at(2).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(3).y2value, cdata->at(2).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(3).y1value, cdata->at(2).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 9 and -self.p &lt;= cdata->at(4).xvalue and -self.p > cdata->at(3).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(4).y2value, cdata->at(3).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(4).y1value, cdata->at(3).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 9 and -self.p &lt;= cdata->at(5).xvalue and -self.p > cdata->at(4).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(5).y2value, cdata->at(4).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(5).y1value, cdata->at(4).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 9 and -self.p &lt;= cdata->at(7).xvalue and -self.p > cdata->at(6).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(7).y2value, cdata->at(6).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(7).y1value, cdata->at(6).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 9 and -self.p &lt;= cdata->at(8).xvalue and -self.p > cdata->at(7).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(8).y2value, cdata->at(7).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(8).y1value, cdata->at(7).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 9 and -self.p &lt;= cdata->at(9).xvalue and -self.p > cdata->at(8).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(9).y2value, cdata->at(8).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(9).y1value, cdata->at(8).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 10 and -self.p &lt;= cdata->at(2).xvalue and -self.p >= cdata->at(1).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(2).y2value, cdata->at(1).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(2).y1value, cdata->at(1).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 10 and -self.p &lt;= cdata->at(3).xvalue and -self.p > cdata->at(2).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(3).y2value, cdata->at(2).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(3).y1value, cdata->at(2).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 10 and -self.p &lt;= cdata->at(4).xvalue and -self.p > cdata->at(3).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(4).y2value, cdata->at(3).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(4).y1value, cdata->at(3).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 10 and -self.p &lt;= cdata->at(5).xvalue and -self.p > cdata->at(4).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(5).y2value, cdata->at(4).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(5).y1value, cdata->at(4).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 10 and -self.p &lt;= cdata->at(7).xvalue and -self.p > cdata->at(6).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(7).y2value, cdata->at(6).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(7).y1value, cdata->at(6).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 10 and -self.p &lt;= cdata->at(8).xvalue and -self.p > cdata->at(7).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(8).y2value, cdata->at(7).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(8).y1value, cdata->at(7).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 10 and -self.p &lt;= cdata->at(9).xvalue and -self.p > cdata->at(8).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(9).y2value, cdata->at(8).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(9).y1value, cdata->at(8).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 10 and -self.p &lt;= cdata->at(10).xvalue and -self.p > cdata->at(9).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(10).y2value, cdata->at(9).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(10).y1value, cdata->at(9).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 11 and -self.p &lt;= cdata->at(2).xvalue and -self.p >= cdata->at(1).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(2).y2value, cdata->at(1).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(2).y1value, cdata->at(1).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 11 and -self.p &lt;= cdata->at(3).xvalue and -self.p > cdata->at(2).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(3).y2value, cdata->at(2).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(3).y1value, cdata->at(2).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 11 and -self.p &lt;= cdata->at(4).xvalue and -self.p > cdata->at(3).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(4).y2value, cdata->at(3).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(4).y1value, cdata->at(3).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 11 and -self.p &lt;= cdata->at(5).xvalue and -self.p > cdata->at(4).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(5).y2value, cdata->at(4).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(5).y1value, cdata->at(4).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 11 and -self.p &lt;= cdata->at(7).xvalue and -self.p > cdata->at(6).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(7).y2value, cdata->at(6).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(7).y1value, cdata->at(6).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 11 and -self.p &lt;= cdata->at(8).xvalue and -self.p > cdata->at(7).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(8).y2value, cdata->at(7).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(8).y1value, cdata->at(7).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 11 and -self.p &lt;= cdata->at(9).xvalue and -self.p > cdata->at(8).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(9).y2value, cdata->at(8).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(9).y1value, cdata->at(8).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 11 and -self.p &lt;= cdata->at(10).xvalue and -self.p > cdata->at(9).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(10).y2value, cdata->at(9).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(10).y1value, cdata->at(9).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(cdata->size() = 11 and -self.p &lt;= cdata->at(11).xvalue and -self.p > cdata->at(10).xvalue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q &lt;= Set{cdata->at(11).y2value, cdata->at(10).y2value}->max()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and -self.q >= Set{cdata->at(11).y1value, cdata->at(10).y1value}->min())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or cdata->size() > 11&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="Xt_RatedSunrealistic" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference not in QoCDCv3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let gu = self.GeneratingUnit in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let rcc = self.InitialReactiveCapabilityCurve in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let rcc_cp = rcc.CurveDatas in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.ratedS &lt; self.minQ.abs()*10&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.ratedS &lt; self.maxQ.abs()*10&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or (gu->size() = 1 and self.ratedS &lt; gu.maxOperatingP.abs()*10)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or (gu->size() = 1 and self.ratedS &lt; gu.minOperatingP.abs()*10)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or (rcc->size() = 1 and rcc_cp->size() > 0 and self.ratedS &lt; rcc_cp.xvalue.abs()->max()*10)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or (rcc->size() = 1 and rcc_cp->size() > 0 and self.ratedS &lt; rcc_cp.y1value.abs()->max()*10)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or (rcc->size() = 1 and rcc_cp->size() > 0 and self.ratedS &lt; rcc_cp.y2value.abs()->max()*10)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="earthing" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="earthingStarPointR"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="earthingStarPointX"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="ikk" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxQ" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="minQ" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="mu" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="qPercent" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="r0" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="r2" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="satDirectSubtransX"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="satDirectSyncX"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="satDirectTransX"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="shortCircuitRotorType"
                eType="#//CGMES/IEC61970/Base/Wires/ShortCircuitRotorKind"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Wires/SynchronousMachineKind"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="voltageRegulationRange"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="r" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="x0" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="x2" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="InitialReactiveCapabilityCurve"
                eType="#//CGMES/IEC61970/Base/Wires/ReactiveCapabilityCurve" eOpposite="#//CGMES/IEC61970/Base/Wires/ReactiveCapabilityCurve/InitiallyUsedBySynchronousMachines"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="operatingMode"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Wires/SynchronousMachineOperatingMode"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="referencePriority"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="SynchronousMachineKind">
            <eLiterals name="generator" value="2"/>
            <eLiterals name="condenser" value="4"/>
            <eLiterals name="generatorOrCondenser" value="6"/>
            <eLiterals name="motor" value="8"/>
            <eLiterals name="generatorOrMotor" value="10"/>
            <eLiterals name="motorOrCondenser" value="12"/>
            <eLiterals name="generatorOrCondenserOrMotor" value="14"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="TapChanger" eSuperTypes="#//CGMES/IEC61970/Base/Core/PowerSystemResource">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="NoLTCTapChangerControl SvTapStepInstances TapPosition DiscreteControlTap ContinuousControlTap RequiredSvTapStep"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="NoLTCTapChangerControl" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=5 ruleID=NoLTCTapChangerControl&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.ltcFlag = false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.TapChangerControl->isEmpty() else true endif"/>
              <details key="SvTapStepInstances" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=5 ruleID=SvTapStepInstances&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.SvTapStep->notEmpty() else true endif"/>
              <details key="TapPosition" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=TapPosition&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svtapstep = self.SvTapStep in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let diff = self.step - svtapstep.position in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and self.DataSet.type = DataSetType::igm&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and svtapstep->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then diff.abs() &lt;= self.DataSet.SSH_SV_MAX_TAP_STEP_DIFF else true endif"/>
              <details key="DiscreteControlTap" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=DiscreteControl&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tcc = self.TapChangerControl in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let floor = self.step.floor() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.controlEnabled&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tcc->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tcc.discrete&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tcc.enabled&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.step->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.step - floor = 0 else true endif"/>
              <details key="ContinuousControlTap" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=ContinuousControl&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tcc = self.TapChangerControl in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.controlEnabled&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tcc->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tcc.enabled&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then tcc.discrete else true endif"/>
              <details key="RequiredSvTapStep" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=RequiredSvTapStep&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.SvTapStep->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="highStep" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="lowStep" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="ltcFlag" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="neutralStep" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="neutralU" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="normalStep" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="TapSchedules" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Wires/TapSchedule" eOpposite="#//CGMES/IEC61970/Base/Wires/TapSchedule/TapChanger"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="TapChangerControl"
                eType="#//CGMES/IEC61970/Base/Wires/TapChangerControl" eOpposite="#//CGMES/IEC61970/Base/Wires/TapChangerControl/TapChanger"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="SvTapStep" eType="#//CGMES/IEC61970/Base/StateVariables/SvTapStep"
                eOpposite="#//CGMES/IEC61970/Base/StateVariables/SvTapStep/TapChanger"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="controlEnabled"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="step" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="TapChangerControl" eSuperTypes="#//CGMES/IEC61970/Base/Wires/RegulatingControl">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="RCandTCCcontrollingObjectsTCC"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="RCandTCCcontrollingObjectsTCC" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=RCandTCCcontrollingObjects&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.TapChanger->notEmpty() else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EReference" name="TapChanger" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/Wires/TapChanger" eOpposite="#//CGMES/IEC61970/Base/Wires/TapChanger/TapChangerControl"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="TapChangerTablePoint" eSuperTypes="#//CGMES/mRID">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="b" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="g" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="r" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="ratio" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="step" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="x" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="TapSchedule" eSuperTypes="#//CGMES/IEC61970/Base/LoadModel/SeasonDayTypeSchedule">
            <eStructuralFeatures xsi:type="ecore:EReference" name="TapChanger" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Wires/TapChanger" eOpposite="#//CGMES/IEC61970/Base/Wires/TapChanger/TapSchedules"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="TransformerControlMode">
            <eLiterals name="volt" value="2"/>
            <eLiterals name="reactive" value="4"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="TransformerEnd" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="rground" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="endNumber" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="grounded" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="xground" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="PhaseTapChanger"
                eType="#//CGMES/IEC61970/Base/Wires/PhaseTapChanger" eOpposite="#//CGMES/IEC61970/Base/Wires/PhaseTapChanger/TransformerEnd"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="RatioTapChanger"
                eType="#//CGMES/IEC61970/Base/Wires/RatioTapChanger" eOpposite="#//CGMES/IEC61970/Base/Wires/RatioTapChanger/TransformerEnd"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="BaseVoltage" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Core/BaseVoltage" eOpposite="#//CGMES/IEC61970/Base/Core/BaseVoltage/TransformerEnds"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Terminal" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Core/Terminal" eOpposite="#//CGMES/IEC61970/Base/Core/Terminal/TransformerEnd"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="WindingConnection">
            <eLiterals name="D" value="2"/>
            <eLiterals name="Y" value="4"/>
            <eLiterals name="Z" value="6"/>
            <eLiterals name="Yn" value="8"/>
            <eLiterals name="Zn" value="10"/>
            <eLiterals name="A" value="12"/>
            <eLiterals name="I" value="14"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="AsynchronousMachineKind">
            <eLiterals name="generator" value="2"/>
            <eLiterals name="motor" value="4"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="SynchronousMachineOperatingMode">
            <eLiterals name="generator" value="2"/>
            <eLiterals name="condenser" value="4"/>
            <eLiterals name="motor" value="6"/>
          </eClassifiers>
        </eSubpackages>
        <eSubpackages name="LoadModel" nsURI="http://Model/1.0/CGMES/IEC61970/Base/LoadModel"
            nsPrefix="LoadModel">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
            <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
            <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
            <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
          </eAnnotations>
          <eClassifiers xsi:type="ecore:EClass" name="ConformLoad" eSuperTypes="#//CGMES/IEC61970/Base/Wires/EnergyConsumer">
            <eStructuralFeatures xsi:type="ecore:EReference" name="LoadGroup" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/LoadModel/ConformLoadGroup" eOpposite="#//CGMES/IEC61970/Base/LoadModel/ConformLoadGroup/EnergyConsumers"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="ConformLoadGroup" eSuperTypes="#//CGMES/IEC61970/Base/LoadModel/LoadGroup">
            <eStructuralFeatures xsi:type="ecore:EReference" name="EnergyConsumers"
                ordered="false" lowerBound="1" upperBound="-1" eType="#//CGMES/IEC61970/Base/LoadModel/ConformLoad"
                eOpposite="#//CGMES/IEC61970/Base/LoadModel/ConformLoad/LoadGroup"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="ConformLoadSchedules"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/LoadModel/ConformLoadSchedule"
                eOpposite="#//CGMES/IEC61970/Base/LoadModel/ConformLoadSchedule/ConformLoadGroup"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="ConformLoadSchedule" eSuperTypes="#//CGMES/IEC61970/Base/LoadModel/SeasonDayTypeSchedule">
            <eStructuralFeatures xsi:type="ecore:EReference" name="ConformLoadGroup"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/LoadModel/ConformLoadGroup"
                eOpposite="#//CGMES/IEC61970/Base/LoadModel/ConformLoadGroup/ConformLoadSchedules"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="DayType" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EReference" name="SeasonDayTypeSchedules"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/LoadModel/SeasonDayTypeSchedule"
                eOpposite="#//CGMES/IEC61970/Base/LoadModel/SeasonDayTypeSchedule/DayType"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="EnergyArea" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EReference" name="ControlArea" eType="#//CGMES/IEC61970/Base/ControlArea/ControlArea"
                eOpposite="#//CGMES/IEC61970/Base/ControlArea/ControlArea/EnergyArea"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="LoadArea" eSuperTypes="#//CGMES/IEC61970/Base/LoadModel/EnergyArea">
            <eStructuralFeatures xsi:type="ecore:EReference" name="SubLoadAreas" ordered="false"
                lowerBound="1" upperBound="-1" eType="#//CGMES/IEC61970/Base/LoadModel/SubLoadArea"
                eOpposite="#//CGMES/IEC61970/Base/LoadModel/SubLoadArea/LoadArea"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="LoadGroup" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EReference" name="SubLoadArea" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/LoadModel/SubLoadArea" eOpposite="#//CGMES/IEC61970/Base/LoadModel/SubLoadArea/LoadGroups"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="LoadResponseCharacteristic"
              eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="LRCExponentModel LCRCoefficientModel LCRCoefficientParameters"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="LRCExponentModel" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=LRCExponentModel &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.exponentModel = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.pVoltageExponent &lt;> 0 and self.qVoltageExponent &lt;> 0 else true endif"/>
              <details key="LCRCoefficientModel" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=LCRCoefficientModel &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.exponentModel = false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.pConstantImpedance + self.pConstantCurrent + self.pConstantPower &lt;> 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.qConstantImpedance + self.qConstantCurrent + self.qConstantPower &lt;> 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="LCRCoefficientParameters" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=3 ruleID=LCRCoefficientParameters &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--2019-11-12 check with NUMERIC_TOLERANCE added&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let numtol =self.DataSet.NUMERIC_TOLERANCE in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.exponentModel = false &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.pConstantImpedance + self.pConstantCurrent + self.pConstantPower &lt;> 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.qConstantImpedance + self.qConstantCurrent + self.qConstantPower &lt;> 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then 1 - numtol &lt; self.pConstantImpedance + self.pConstantCurrent + self.pConstantPower&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and 1 + numtol > self.pConstantImpedance + self.pConstantCurrent + self.pConstantPower&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and 1 - numtol &lt; self.qConstantImpedance + self.qConstantCurrent + self.qConstantPower&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and 1 + numtol > self.qConstantImpedance + self.qConstantCurrent + self.qConstantPower&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="exponentModel"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="pConstantCurrent"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="pConstantImpedance"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="pConstantPower"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="pFrequencyExponent"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="pVoltageExponent"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="qConstantCurrent"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="qConstantImpedance"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="qConstantPower"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="qFrequencyExponent"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="qVoltageExponent"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="EnergyConsumer"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Wires/EnergyConsumer"
                eOpposite="#//CGMES/IEC61970/Base/Wires/EnergyConsumer/LoadResponse"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="NonConformLoad" eSuperTypes="#//CGMES/IEC61970/Base/Wires/EnergyConsumer">
            <eStructuralFeatures xsi:type="ecore:EReference" name="LoadGroup" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/LoadModel/NonConformLoadGroup" eOpposite="#//CGMES/IEC61970/Base/LoadModel/NonConformLoadGroup/EnergyConsumers"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="NonConformLoadGroup" eSuperTypes="#//CGMES/IEC61970/Base/LoadModel/LoadGroup">
            <eStructuralFeatures xsi:type="ecore:EReference" name="NonConformLoadSchedules"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/LoadModel/NonConformLoadSchedule"
                eOpposite="#//CGMES/IEC61970/Base/LoadModel/NonConformLoadSchedule/NonConformLoadGroup"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="EnergyConsumers"
                ordered="false" lowerBound="1" upperBound="-1" eType="#//CGMES/IEC61970/Base/LoadModel/NonConformLoad"
                eOpposite="#//CGMES/IEC61970/Base/LoadModel/NonConformLoad/LoadGroup"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="NonConformLoadSchedule" eSuperTypes="#//CGMES/IEC61970/Base/LoadModel/SeasonDayTypeSchedule">
            <eStructuralFeatures xsi:type="ecore:EReference" name="NonConformLoadGroup"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/LoadModel/NonConformLoadGroup"
                eOpposite="#//CGMES/IEC61970/Base/LoadModel/NonConformLoadGroup/NonConformLoadSchedules"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Season" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="endDate" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDate"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="startDate" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDate"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="SeasonDayTypeSchedules"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/LoadModel/SeasonDayTypeSchedule"
                eOpposite="#//CGMES/IEC61970/Base/LoadModel/SeasonDayTypeSchedule/Season"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="SeasonDayTypeSchedule" eSuperTypes="#//CGMES/IEC61970/Base/Core/RegularIntervalSchedule">
            <eStructuralFeatures xsi:type="ecore:EReference" name="DayType" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/LoadModel/DayType" eOpposite="#//CGMES/IEC61970/Base/LoadModel/DayType/SeasonDayTypeSchedules"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Season" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/LoadModel/Season" eOpposite="#//CGMES/IEC61970/Base/LoadModel/Season/SeasonDayTypeSchedules"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="StationSupply" eSuperTypes="#//CGMES/IEC61970/Base/Wires/EnergyConsumer"/>
          <eClassifiers xsi:type="ecore:EClass" name="SubLoadArea" eSuperTypes="#//CGMES/IEC61970/Base/LoadModel/EnergyArea">
            <eStructuralFeatures xsi:type="ecore:EReference" name="LoadGroups" ordered="false"
                lowerBound="1" upperBound="-1" eType="#//CGMES/IEC61970/Base/LoadModel/LoadGroup"
                eOpposite="#//CGMES/IEC61970/Base/LoadModel/LoadGroup/SubLoadArea"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="LoadArea" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/LoadModel/LoadArea" eOpposite="#//CGMES/IEC61970/Base/LoadModel/LoadArea/SubLoadAreas"/>
          </eClassifiers>
        </eSubpackages>
        <eSubpackages name="Equivalents" nsURI="http://Model/1.0/CGMES/IEC61970/Base/Equivalents"
            nsPrefix="Equivalents">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
            <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
            <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
            <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
          </eAnnotations>
          <eClassifiers xsi:type="ecore:EClass" name="EquivalentBranch" eSuperTypes="#//CGMES/IEC61970/Base/Equivalents/EquivalentEquipment">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="EquivalentBranchX"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="EquivalentBranchX" value="&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=EquivalentBranchX &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;let xlimit = self.DataSet.EQ_BRANCH_X_LIMIT in&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;then self.x*self.x + self.x21*self.x21 >= xlimit*xlimit else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="negativeR12" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="negativeR21" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="negativeX12" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="negativeX21" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="positiveR12" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="positiveR21" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="positiveX12" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="positiveX21" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="r" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="r21" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="x" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="x21" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="zeroR12" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="zeroR21" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="zeroX12" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="zeroX21" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="EquivalentEquipment" eSuperTypes="#//CGMES/IEC61970/Base/Core/ConductingEquipment">
            <eStructuralFeatures xsi:type="ecore:EReference" name="EquivalentNetwork"
                eType="#//CGMES/IEC61970/Base/Equivalents/EquivalentNetwork" eOpposite="#//CGMES/IEC61970/Base/Equivalents/EquivalentNetwork/EquivalentEquipments"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="EquivalentInjection" eSuperTypes="#//CGMES/IEC61970/Base/Equivalents/EquivalentEquipment">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="EquivalentInjectionControlEnabled EIActivePowerInfeedLim EIActivePowerInfeedDiffW EIReactivePowerInfeedLim EIReactivePowerInfeedDiffW"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="EquivalentInjectionControlEnabled" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=5 ruleID=EquivalentInjectionControlEnable&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let bp = self.Terminals->asSequence()->at(1).TopologicalNode in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and bp->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and bp.boundaryPoint->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and bp.boundaryPoint = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (bp.description = null or bp.description.size() &lt; 4 or bp.description &lt;> 'HVDC')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.regulationStatus = false else true endif"/>
              <details key="EIActivePowerInfeedLim" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=EIActivePowerInfeedLim&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.p->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.maxP->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.maxP &lt;> 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.minP->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.minP &lt;> 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then -self.p &lt;= self.maxP and -self.p >= self.minP&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="EIActivePowerInfeedDiffW" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=EIActivePowerInfeedDiffW&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl = self.Terminals->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svpf = trmnl.SvPowerFlow in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let diff = svpf.p - self.p in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and self.DataSet.type = DataSetType::igm&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and svpf->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then diff.abs() &lt;= self.DataSet.SSH_SV_MAX_P_DIFF else true endif"/>
              <details key="EIReactivePowerInfeedLim" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=EIReactivePowerInfeedLim&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--2019-11-12 minQ may be a valid zero&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.q->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.maxQ->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.maxQ &lt;> 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then -self.q &lt;= self.maxQ and -self.q >= self.minQ&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="EIReactivePowerInfeedDiffW" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=EIReactivePowerInfeedDiffW&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnl = self.Terminals->asSequence()->at(1) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let sshq = self.q in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svq = trmnl.SvPowerFlow.q in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let diff = sshq - svq in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and self.DataSet.type = DataSetType::igm&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then diff.abs() &lt;= self.DataSet.SSH_SV_MAX_Q_DIFF else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxP" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxQ" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="minP" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="minQ" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="r" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="r0" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="r2" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="regulationCapability"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="x" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="x0" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="x2" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="ReactiveCapabilityCurve"
                eType="#//CGMES/IEC61970/Base/Wires/ReactiveCapabilityCurve" eOpposite="#//CGMES/IEC61970/Base/Wires/ReactiveCapabilityCurve/EquivalentInjection"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="regulationStatus"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="regulationTarget"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="p" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="q" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="EquivalentNetwork" eSuperTypes="#//CGMES/IEC61970/Base/Core/ConnectivityNodeContainer">
            <eStructuralFeatures xsi:type="ecore:EReference" name="EquivalentEquipments"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/Equivalents/EquivalentEquipment"
                eOpposite="#//CGMES/IEC61970/Base/Equivalents/EquivalentEquipment/EquivalentNetwork"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="EquivalentShunt" eSuperTypes="#//CGMES/IEC61970/Base/Equivalents/EquivalentEquipment">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="b" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="g" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
        </eSubpackages>
        <eSubpackages name="ControlArea" nsURI="http://Model/1.0/CGMES/IEC61970/Base/ControlArea"
            nsPrefix="ControlArea">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
            <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
            <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
            <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
          </eAnnotations>
          <eClassifiers xsi:type="ecore:EClass" name="ControlArea" eSuperTypes="#//CGMES/IEC61970/Base/Core/PowerSystemResource">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="CATieFlow CAType NetInterchange1 NetInterchange2 CGMTieFlowImbalance"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="CATieFlow" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=CATieFlow&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.type = ControlAreaTypeKind::Interchange&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.TieFlow->size() > 0 else true endif"/>
              <details key="CAType" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=3 ruleID=CAType&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.TieFlow->size() > 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.type = ControlAreaTypeKind::Interchange else true endif"/>
              <details key="NetInterchange1" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=NetInterchange1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let sourceref = self.EqModel in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let ties = self.TieFlow in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tie_trmnls = ties->select(Terminal->notEmpty()).Terminal in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tie_tns = tie_trmnls->select(TopologicalNode->notEmpty()).TopologicalNode in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tie_ei_trmnls = tie_tns.Terminal->select(ConductingEquipment.oclIsTypeOf(Equivalents::EquivalentInjection)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and EqModel = sourceref) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let ei_svpf = tie_ei_trmnls.SvPowerFlow in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let ei_svpf_p = ei_svpf.p in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svpf_sum = ei_svpf_p->sum() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svpf_diff = svpf_sum + self.netInterchange in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.type = DataSetType::igm&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.type = ControlAreaTypeKind::Interchange&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ties->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tie_trmnls->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tie_tns->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tie_ei_trmnls->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ei_svpf->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then (self.pTolerance > 0 and svpf_diff.abs() &lt; self.pTolerance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; (self.pTolerance = 0 and svpf_diff.abs() &lt; self.DataSet.INTERCH_IMBALANCE_WARNING)&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="NetInterchange2" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=NetInterchange2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let sourceref = self.EqModel in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let ties = self.TieFlow in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tie_trmnls = ties->select(Terminal->notEmpty()).Terminal in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tie_tns = tie_trmnls->select(TopologicalNode->notEmpty()).TopologicalNode in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tie_ei_trmnls = tie_tns.Terminal->select(ConductingEquipment.oclIsTypeOf(Equivalents::EquivalentInjection)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and EqModel = sourceref&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let ei_svpf = tie_ei_trmnls->select(SvPowerFlow->notEmpty()).SvPowerFlow in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let ei_svpf_p = ei_svpf.p in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svpf_sum = ei_svpf_p->sum() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svpf_diff = svpf_sum + self.netInterchange in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.type = DataSetType::igm&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.type = ControlAreaTypeKind::Interchange&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ties->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tie_trmnls->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tie_tns->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tie_ei_trmnls->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then ei_svpf->notEmpty() and  svpf_diff.abs() &lt; self.DataSet.INTERCH_IMBALANCE_ERROR&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else true endif"/>
              <details key="CGMTieFlowImbalance" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=8 ruleID=CGMTieFlowImbalance&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let sourceref = self.EqModel in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let ties = self.TieFlow in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tie_trmnls = ties->select(Terminal->notEmpty()).Terminal in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tie_tns = tie_trmnls.TopologicalNode in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tie_ei_trmnls = tie_tns.Terminal->select(t |  t.ConductingEquipment.oclIsTypeOf(Equivalents::EquivalentInjection)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and t.EqModel = sourceref&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svpf = tie_ei_trmnls->select(SvPowerFlow->notEmpty()).SvPowerFlow in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svpfp = svpf.p in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let svpfp_diff = svpfp->sum() + self.netInterchange in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.emf_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.type = DataSetType::cgm&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and ties->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tie_trmnls->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tie_tns->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tie_ei_trmnls->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and svpf->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then svpfp_diff.abs() &lt; self.DataSet.INTERCH_IMBALANCE_EMF else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/ControlArea/ControlAreaTypeKind"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="TieFlow" ordered="false"
                upperBound="-1" eType="#//CGMES/IEC61970/Base/ControlArea/TieFlow"
                eOpposite="#//CGMES/IEC61970/Base/ControlArea/TieFlow/ControlArea"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="ControlAreaGeneratingUnit"
                ordered="false" upperBound="-1" eType="#//CGMES/IEC61970/Base/ControlArea/ControlAreaGeneratingUnit"
                eOpposite="#//CGMES/IEC61970/Base/ControlArea/ControlAreaGeneratingUnit/ControlArea"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="EnergyArea" eType="#//CGMES/IEC61970/Base/LoadModel/EnergyArea"
                eOpposite="#//CGMES/IEC61970/Base/LoadModel/EnergyArea/ControlArea"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="netInterchange"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="pTolerance" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="ControlAreaGeneratingUnit" eSuperTypes="#//CGMES/IEC61970/Base/Core/IdentifiedObject">
            <eStructuralFeatures xsi:type="ecore:EReference" name="GeneratingUnit"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Generation/Production/GeneratingUnit"
                eOpposite="#//CGMES/IEC61970/Base/Generation/Production/GeneratingUnit/ControlAreaGeneratingUnit"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="ControlArea" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/ControlArea/ControlArea" eOpposite="#//CGMES/IEC61970/Base/ControlArea/ControlArea/ControlAreaGeneratingUnit"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EEnum" name="ControlAreaTypeKind">
            <eLiterals name="AGC" value="2"/>
            <eLiterals name="Forecast" value="4"/>
            <eLiterals name="Interchange" value="6"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="TieFlow" eSuperTypes="#//CGMES/mRID">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="positiveFlowIn"
                lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="ControlArea" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/ControlArea/ControlArea" eOpposite="#//CGMES/IEC61970/Base/ControlArea/ControlArea/TieFlow"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Terminal" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Core/Terminal" eOpposite="#//CGMES/IEC61970/Base/Core/Terminal/TieFlow"/>
          </eClassifiers>
        </eSubpackages>
        <eSubpackages name="StateVariables" nsURI="http://Model/1.0/CGMES/IEC61970/Base/StateVariables"
            nsPrefix="StateVariables">
          <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
            <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
            <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
            <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
          </eAnnotations>
          <eClassifiers xsi:type="ecore:EClass" name="StateVariable" eSuperTypes="#//CGMES/mRID"/>
          <eClassifiers xsi:type="ecore:EClass" name="SvStatus" eSuperTypes="#//CGMES/IEC61970/Base/StateVariables/StateVariable">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="inService" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="ConductingEquipment"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Core/ConductingEquipment"
                eOpposite="#//CGMES/IEC61970/Base/Core/ConductingEquipment/SvStatus"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="SvInjection" eSuperTypes="#//CGMES/IEC61970/Base/StateVariables/StateVariable">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="SvInjectionLimit"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="SvInjectionLimit" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=SvInjectionLimit&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.pInjection.abs() &lt;= self.DataSet.SV_INJECTION_LIMIT &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.qInjection.abs() &lt;= self.DataSet.SV_INJECTION_LIMIT else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="pInjection" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="qInjection" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="TopologicalNode"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Topology/TopologicalNode"
                eOpposite="#//CGMES/IEC61970/Base/Topology/TopologicalNode/SvInjection"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="SvPowerFlow" eSuperTypes="#//CGMES/IEC61970/Base/StateVariables/StateVariable">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="DisconnectedTerminal"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="DisconnectedTerminal" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=5 ruleID=DisconnectedTerminal&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.global_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.Terminal->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.Terminal.oclAsType(Base::Core::Terminal).connected = false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.p = 0 and self.q = 0 else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="p" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="q" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="Terminal" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Core/Terminal" eOpposite="#//CGMES/IEC61970/Base/Core/Terminal/SvPowerFlow"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="SvShuntCompensatorSections"
              eSuperTypes="#//CGMES/IEC61970/Base/StateVariables/StateVariable">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="sections" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="ShuntCompensator"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Wires/ShuntCompensator"
                eOpposite="#//CGMES/IEC61970/Base/Wires/ShuntCompensator/SvShuntCompensatorSections"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="SvTapStep" eSuperTypes="#//CGMES/IEC61970/Base/StateVariables/StateVariable">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="position" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="TapChanger" lowerBound="1"
                eType="#//CGMES/IEC61970/Base/Wires/TapChanger" eOpposite="#//CGMES/IEC61970/Base/Wires/TapChanger/SvTapStep"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="SvVoltage" eSuperTypes="#//CGMES/IEC61970/Base/StateVariables/StateVariable">
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
              <details key="constraints" value="InvalidVoltage VoltageProfile"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
              <details key="InvalidVoltage" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv3 Level=6 ruleID=InvalidVoltage&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tn = self.TopologicalNode in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let bv = tn.BaseVoltage in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let vpu = self.v/bv.nominalVoltage in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.DataSet.global_level_validation or self.DataSet.global_level_validation)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tn->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and bv->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.v->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.v &lt;> 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then 0.4 &lt; vpu else true endif"/>
              <details key="VoltageProfile" value="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=6 ruleID=VoltageProfile&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--docReference QoCDCv2 &amp; QoCDCv3 Level=8 ruleID=CGMVoltageProfile&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let tn = self.TopologicalNode in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let trmnls = tn.Terminal in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let vlimits = trmnls.OperationalLimitSet.OperationalLimitValue->select(oclIsTypeOf(OperationalLimits::VoltageLimit)) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let vmax = vlimits->select(l | l.OperationalLimitType.limitType = OperationalLimits::LimitTypeKind::highVoltage) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let vmin = vlimits->select(l | l.OperationalLimitType.limitType = OperationalLimits::LimitTypeKind::lowVoltage) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let vmax_min = vmax.oclAsType(OperationalLimits::VoltageLimit).value->min() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let vmin_max = vmin.oclAsType(OperationalLimits::VoltageLimit).value->max() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (self.DataSet.emf_level_validation or self.DataSet.global_level_validation)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tn->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnls->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and vmax->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and vmin->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.v->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.v &lt;> 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.v &lt;= vmax_min and self.v >= vmin_max else true endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tn->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnls->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and vmax->isEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and vmin->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.v->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.v &lt;> 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.v >= vmin_max else true endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.DataSet.validationScope = ValidationScope::QOCDCV3_1 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or self.DataSet.validationScope = ValidationScope::QOCDCV2_1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.DataSet.local_level_validation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--and not(self.DataSet.excludeProvedRules)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and tn->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and trmnls->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and vmax->notEmpty() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and vmin->isEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.v->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and self.v &lt;> 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.v &lt;= vmax_min else true endif"/>
            </eAnnotations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="angle" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="v" lowerBound="1"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="TopologicalNode"
                lowerBound="1" eType="#//CGMES/IEC61970/Base/Topology/TopologicalNode"
                eOpposite="#//CGMES/IEC61970/Base/Topology/TopologicalNode/SvVoltage"/>
          </eClassifiers>
        </eSubpackages>
      </eSubpackages>
    </eSubpackages>
  </eSubpackages>
</ecore:EPackage>
